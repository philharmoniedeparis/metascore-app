{"version":3,"file":"metaScore.Editor.umd.min.954.js","mappings":"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","sources":["webpack://metaScore/./packages/editor/modules/component_form/ckeditor/plugins/ckeditor5-behaviortrigger/src/utils/automaticdecorators.js","webpack://metaScore/./packages/editor/modules/component_form/ckeditor/plugins/ckeditor5-behaviortrigger/src/utils/index.js","webpack://metaScore/./packages/editor/modules/component_form/ckeditor/plugins/ckeditor5-behaviortrigger/src/addbehaviortriggercommand.js","webpack://metaScore/./packages/editor/modules/component_form/ckeditor/plugins/ckeditor5-behaviortrigger/src/removebehaviortriggercommand.js","webpack://metaScore/./packages/editor/modules/component_form/ckeditor/plugins/ckeditor5-behaviortrigger/src/behaviortriggerediting.js","webpack://metaScore/./packages/editor/modules/component_form/ckeditor/plugins/ckeditor5-behaviortrigger/src/ui/behaviortriggerformview.js","webpack://metaScore/./packages/editor/modules/component_form/ckeditor/plugins/ckeditor5-behaviortrigger/theme/icons/removebehaviortrigger.svg","webpack://metaScore/./packages/editor/modules/component_form/ckeditor/plugins/ckeditor5-behaviortrigger/src/ui/behaviortriggeractionsview.js","webpack://metaScore/./packages/editor/modules/component_form/ckeditor/plugins/ckeditor5-behaviortrigger/theme/icons/addbehaviortrigger.svg","webpack://metaScore/./packages/editor/modules/component_form/ckeditor/plugins/ckeditor5-behaviortrigger/src/behaviortriggerui.js","webpack://metaScore/./packages/editor/modules/component_form/ckeditor/plugins/ckeditor5-behaviortrigger/src/behaviortrigger.js","webpack://metaScore/./packages/editor/modules/component_form/ckeditor/plugins/ckeditor5-link/src/linkcommand.js","webpack://metaScore/./packages/editor/modules/component_form/ckeditor/plugins/ckeditor5-link/src/linkediting.js","webpack://metaScore/./packages/editor/modules/component_form/ckeditor/plugins/ckeditor5-link/src/autolink.js","webpack://metaScore/./packages/editor/modules/component_form/ckeditor/plugins/ckeditor5-link/src/ui/inputtimecodeview.js","webpack://metaScore/./packages/editor/modules/component_form/ckeditor/plugins/ckeditor5-link/src/ui/utils.js","webpack://metaScore/./packages/editor/modules/component_form/ckeditor/plugins/ckeditor5-link/src/ui/formgroupview.js","webpack://metaScore/./packages/editor/modules/component_form/ckeditor/plugins/ckeditor5-link/theme/icons/clear.svg","webpack://metaScore/./packages/editor/modules/component_form/ckeditor/plugins/ckeditor5-link/theme/icons/in.svg","webpack://metaScore/./packages/editor/modules/component_form/ckeditor/plugins/ckeditor5-link/theme/icons/out.svg","webpack://metaScore/./packages/editor/modules/component_form/ckeditor/plugins/ckeditor5-link/src/ui/labeledtimecodefieldview.js","webpack://metaScore/./packages/editor/modules/component_form/ckeditor/plugins/ckeditor5-link/theme/icons/tip.svg","webpack://metaScore/./packages/editor/modules/component_form/ckeditor/plugins/ckeditor5-link/src/ui/linkformview.js","webpack://metaScore/./packages/editor/modules/component_form/ckeditor/plugins/ckeditor5-link/theme/icons/link.svg","webpack://metaScore/./packages/editor/modules/component_form/ckeditor/plugins/ckeditor5-link/src/linkui.js","webpack://metaScore/./packages/editor/modules/component_form/ckeditor/plugins/ckeditor5-link/src/link.js","webpack://metaScore/./packages/editor/modules/component_form/ckeditor/plugins/ckeditor5-link/src/linkimageediting.js","webpack://metaScore/./packages/editor/modules/component_form/ckeditor/plugins/ckeditor5-link/src/linkimageui.js","webpack://metaScore/./packages/editor/modules/component_form/ckeditor/plugins/ckeditor5-link/src/linkimage.js","webpack://metaScore/./packages/editor/modules/component_form/ckeditor/plugins/ckeditor5-sourceediting/src/sourceediting.js","webpack://metaScore/./packages/editor/modules/component_form/ckeditor/plugins/ckeditor5-uploadadapter/src/adapter.js","webpack://metaScore/./packages/editor/modules/component_form/ckeditor/plugins/ckeditor5-uploadadapter/src/uploadadapter.js","webpack://metaScore/./packages/editor/modules/component_form/ckeditor/index.js","webpack://metaScore/./node_modules/@ckeditor/ckeditor5-link/theme/icons/unlink.svg"],"sourcesContent":["/**\n * Helper class that ties together all {@link module:link/link~LinkDecoratorAutomaticDefinition} and provides\n * the {@link module:engine/conversion/downcasthelpers~DowncastHelpers#attributeToElement downcast dispatchers} for them.\n */\nexport default class AutomaticDecorators {\n  constructor() {\n    /**\n     * Stores the definition of {@link module:link/link~LinkDecoratorAutomaticDefinition automatic decorators}.\n     * This data is used as a source for a downcast dispatcher to create a proper conversion to output data.\n     *\n     * @private\n     * @type {Set}\n     */\n    this._definitions = new Set();\n  }\n\n  /**\n   * Gives information about the number of decorators stored in the {@link module:link/utils~AutomaticDecorators} instance.\n   *\n   * @readonly\n   * @protected\n   * @type {Number}\n   */\n  get length() {\n    return this._definitions.size;\n  }\n\n  /**\n   * Adds automatic decorator objects or an array with them to be used during downcasting.\n   *\n   * @param {module:link/link~LinkDecoratorAutomaticDefinition|Array.<module:link/link~LinkDecoratorAutomaticDefinition>} item\n   * A configuration object of automatic rules for decorating links. It might also be an array of such objects.\n   */\n  add(item) {\n    if (Array.isArray(item)) {\n      item.forEach((item) => this._definitions.add(item));\n    } else {\n      this._definitions.add(item);\n    }\n  }\n\n  /**\n   * Provides the conversion helper used in the {@link module:engine/conversion/downcasthelpers~DowncastHelpers#add} method.\n   *\n   * @returns {Function} A dispatcher function used as conversion helper\n   * in {@link module:engine/conversion/downcasthelpers~DowncastHelpers#add}.\n   */\n  getDispatcher() {\n    return (dispatcher) => {\n      dispatcher.on(\n        \"attribute:behaviorTrigger\",\n        (evt, data, conversionApi) => {\n          // There is only test as this behavior decorates links and\n          // it is run before dispatcher which actually consumes this node.\n          // This allows on writing own dispatcher with highest priority,\n          // which blocks both native converter and this additional decoration.\n          if (\n            !conversionApi.consumable.test(\n              data.item,\n              \"attribute:behaviorTrigger\"\n            )\n          ) {\n            return;\n          }\n\n          // Automatic decorators for block links are handled e.g. in LinkImageEditing.\n          if (\n            !(\n              data.item.is(\"selection\") ||\n              conversionApi.schema.isInline(data.item)\n            )\n          ) {\n            return;\n          }\n\n          const viewWriter = conversionApi.writer;\n          const viewSelection = viewWriter.document.selection;\n\n          for (const item of this._definitions) {\n            const viewElement = viewWriter.createAttributeElement(\n              \"a\",\n              item.attributes,\n              {\n                priority: 5,\n              }\n            );\n\n            if (item.classes) {\n              viewWriter.addClass(item.classes, viewElement);\n            }\n\n            for (const key in item.styles) {\n              viewWriter.setStyle(key, item.styles[key], viewElement);\n            }\n\n            viewWriter.setCustomProperty(\"behaviorTrigger\", true, viewElement);\n            if (item.callback(data.attributeNewValue)) {\n              if (data.item.is(\"selection\")) {\n                viewWriter.wrap(viewSelection.getFirstRange(), viewElement);\n              } else {\n                viewWriter.wrap(\n                  conversionApi.mapper.toViewRange(data.range),\n                  viewElement\n                );\n              }\n            } else {\n              viewWriter.unwrap(\n                conversionApi.mapper.toViewRange(data.range),\n                viewElement\n              );\n            }\n          }\n        },\n        { priority: \"high\" }\n      );\n    };\n  }\n}\n","import { upperFirst } from \"lodash-es\";\n\nexport { default as AutomaticDecorators } from \"./automaticdecorators\";\n\n/**\n * A keystroke used by the {@link module:link/linkui~LinkUI link UI feature}.\n */\nexport const TRIGGER_KEYSTROKE = \"Ctrl+T\";\n\n/**\n * Returns `true` if a given view node is the link element.\n *\n * @param {module:engine/view/node~Node} node\n * @returns {Boolean}\n */\nexport function isLinkElement(node) {\n  return (\n    node.is(\"attributeElement\") && !!node.getCustomProperty(\"behaviorTrigger\")\n  );\n}\n\n/**\n * Creates a behavior trigger with the provided `id` attribute.\n *\n * @param {String} id\n * @param {module:engine/conversion/downcastdispatcher~DowncastConversionApi} conversionApi\n * @returns {module:engine/view/attributeelement~AttributeElement}\n */\nexport function createBehaviorTriggerElement(id, { writer }) {\n  // Priority 5 - https://github.com/ckeditor/ckeditor5-link/issues/121.\n  const behaviorTriggerElement = writer.createAttributeElement(\n    \"a\",\n    { \"data-behavior-trigger\": id },\n    { priority: 5 }\n  );\n  writer.setCustomProperty(\"behaviorTrigger\", true, behaviorTriggerElement);\n\n  return behaviorTriggerElement;\n}\n\n/**\n * Converts an object with defined decorators to a normalized array of decorators. The `id` key is added for each decorator and\n * is used as the attribute's name in the model.\n *\n * @param {Object.<String, module:link/link~LinkDecoratorDefinition>} decorators\n * @returns {Array.<module:link/link~LinkDecoratorDefinition>}\n */\nexport function normalizeDecorators(decorators) {\n  const retArray = [];\n\n  if (decorators) {\n    for (const [key, value] of Object.entries(decorators)) {\n      const decorator = Object.assign({}, value, {\n        id: `link${upperFirst(key)}`,\n      });\n      retArray.push(decorator);\n    }\n  }\n\n  return retArray;\n}\n\n/**\n * Returns `true` if the specified `element` can be linked (the element allows the `behaviorTrigger` attribute).\n *\n * @params {module:engine/model/element~Element|null} element\n * @params {module:engine/model/schema~Schema} schema\n * @returns {Boolean}\n */\nexport function isTriggerableElement(element, schema) {\n  if (!element) {\n    return false;\n  }\n\n  return schema.checkAttribute(element.name, \"behaviorTrigger\");\n}\n","import { Command } from \"@ckeditor/ckeditor5-core\";\nimport { findAttributeRange } from \"@ckeditor/ckeditor5-typing\";\nimport { Collection, first, toMap } from \"@ckeditor/ckeditor5-utils\";\n\nimport { AutomaticDecorators, isTriggerableElement } from \"./utils\";\n\n/**\n * The link command. It is used by the {@link module:link/link~Link link feature}.\n *\n * @extends module:core/command~Command\n */\nexport default class AddBehaviorTriggerCommand extends Command {\n  /**\n   * The value of the `'behaviorTrigger'` attribute if the start of the selection is located in a node with this attribute.\n   *\n   * @observable\n   * @readonly\n   * @member {Object|undefined} #value\n   */\n\n  constructor(editor) {\n    super(editor);\n\n    /**\n     * A collection of {@link module:link/utils~ManualDecorator manual decorators}\n     * corresponding to the {@link module:link/link~LinkConfig#decorators decorator configuration}.\n     *\n     * You can consider it a model with states of manual decorators added to the currently selected link.\n     *\n     * @readonly\n     * @type {module:utils/collection~Collection}\n     */\n    this.manualDecorators = new Collection();\n\n    /**\n     * An instance of the helper that ties together all {@link module:link/link~LinkDecoratorAutomaticDefinition}\n     * that are used by the {@glink features/link link} and the {@glink features/images/images-linking linking images} features.\n     *\n     * @readonly\n     * @type {module:link/utils~AutomaticDecorators}\n     */\n    this.automaticDecorators = new AutomaticDecorators();\n  }\n\n  /**\n   * Synchronizes the state of {@link #manualDecorators} with the currently present elements in the model.\n   */\n  restoreManualDecoratorStates() {\n    for (const manualDecorator of this.manualDecorators) {\n      manualDecorator.value = this._getDecoratorStateFromModel(\n        manualDecorator.id\n      );\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  refresh() {\n    const model = this.editor.model;\n    const selection = model.document.selection;\n    const selectedElement =\n      selection.getSelectedElement() || first(selection.getSelectedBlocks());\n\n    // A check for any integration that allows linking elements (e.g. `LinkImage`).\n    // Currently the selection reads attributes from text nodes only. See #7429 and #7465.\n    if (isTriggerableElement(selectedElement, model.schema)) {\n      this.value = selectedElement.getAttribute(\"behaviorTrigger\");\n      this.isEnabled = model.schema.checkAttribute(\n        selectedElement,\n        \"behaviorTrigger\"\n      );\n    } else {\n      this.value = selection.getAttribute(\"behaviorTrigger\");\n      this.isEnabled = model.schema.checkAttributeInSelection(\n        selection,\n        \"behaviorTrigger\"\n      );\n    }\n\n    for (const manualDecorator of this.manualDecorators) {\n      manualDecorator.value = this._getDecoratorStateFromModel(\n        manualDecorator.id\n      );\n    }\n  }\n\n  /**\n   * Executes the command.\n   *\n   * When the selection is non-collapsed, the `behaviorTrigger` attribute will be applied to nodes inside the selection, but only to\n   * those nodes where the `behaviorTrigger` attribute is allowed (disallowed nodes will be omitted).\n   *\n   * When the selection is collapsed and is not inside the text with the `behaviorTrigger` attribute, a\n   * new {@link module:engine/model/text~Text text node} with the `behaviorTrigger` attribute will be inserted in place of the caret, but\n   * only if such element is allowed in this place. The `_data` of the inserted text will equal the `href` parameter.\n   * The selection will be updated to wrap the just inserted text node.\n   *\n   * When the selection is collapsed and inside the text with the `behaviorTrigger` attribute, the attribute value will be updated.\n   *\n   * # Decorators and model attribute management\n   *\n   * There is an optional argument to this command that applies or removes model\n   * {@glink framework/guides/architecture/editing-engine#text-attributes text attributes} brought by\n   * {@link module:link/utils~ManualDecorator manual link decorators}.\n   *\n   * Text attribute names in the model correspond to the entries in the {@link module:link/link~LinkConfig#decorators configuration}.\n   * For every decorator configured, a model text attribute exists with the \"link\" prefix. For example, a `'linkMyDecorator'` attribute\n   * corresponds to `'myDecorator'` in the configuration.\n   *\n   * To learn more about link decorators, check out the {@link module:link/link~LinkConfig#decorators `config.link.decorators`}\n   * documentation.\n   *\n   * Here is how to manage decorator attributes with the addBehaviorTrigger command:\n   *\n   *\t\tconst addBehaviorTriggerCommand = editor.commands.get( 'addBehaviorTrigger' );\n   *\n   *\t\t// Adding a new decorator attribute.\n   *\t\taddBehaviorTriggerCommand.execute( 'my-trigger-id');\n   *\n   * **Note**: If the decorator attribute name is not specified, its state remains untouched.\n   *\n   * **Note**: {@link module:link/removeBehaviorTriggerCommand~RemoveBehaviorTriggerCommand#execute `RemoveBehaviorTriggerCommand#execute()`} removes all\n   * decorator attributes.\n   *\n   * @fires execute\n   * @param {String} id Trigger id.\n   * @param {Object} [manualDecoratorIds={}] The information about manual decorator attributes to be applied or removed upon execution.\n   */\n  execute(id, manualDecoratorIds = {}) {\n    const model = this.editor.model;\n    const selection = model.document.selection;\n    // Stores information about manual decorators to turn them on/off when command is applied.\n    const truthyManualDecorators = [];\n    const falsyManualDecorators = [];\n\n    for (const name in manualDecoratorIds) {\n      if (manualDecoratorIds[name]) {\n        truthyManualDecorators.push(name);\n      } else {\n        falsyManualDecorators.push(name);\n      }\n    }\n\n    model.change((writer) => {\n      // If selection is collapsed then update selected link or insert new one at the place of caret.\n      if (selection.isCollapsed) {\n        const position = selection.getFirstPosition();\n\n        // When selection is inside text with `behaviorTrigger` attribute.\n        if (selection.hasAttribute(\"behaviorTrigger\")) {\n          // Then update `behaviorTrigger` value.\n          const linkRange = findAttributeRange(\n            position,\n            \"behaviorTrigger\",\n            selection.getAttribute(\"behaviorTrigger\"),\n            model\n          );\n\n          writer.setAttribute(\"behaviorTrigger\", id, linkRange);\n\n          truthyManualDecorators.forEach((item) => {\n            writer.setAttribute(item, true, linkRange);\n          });\n\n          falsyManualDecorators.forEach((item) => {\n            writer.removeAttribute(item, linkRange);\n          });\n\n          // Put the selection at the end of the updated link.\n          writer.setSelection(\n            writer.createPositionAfter(linkRange.end.nodeBefore)\n          );\n        }\n        // If not then insert text node with `behaviorTrigger` attribute in place of caret.\n        // However, since selection is collapsed, attribute value will be used as data for text node.\n        // So, if `id` is empty, do not create text node.\n        else if (id !== \"\") {\n          const attributes = toMap(selection.getAttributes());\n\n          attributes.set(\"behaviorTrigger\", id);\n\n          truthyManualDecorators.forEach((item) => {\n            attributes.set(item, true);\n          });\n\n          const { end: positionAfter } = model.insertContent(\n            writer.createText(id, attributes),\n            position\n          );\n\n          // Put the selection at the end of the inserted link.\n          // Using end of range returned from insertContent in case nodes with the same attributes got merged.\n          writer.setSelection(positionAfter);\n        }\n\n        // Remove the `behaviorTrigger` attribute and all link decorators from the selection.\n        // It stops adding a new content into the link element.\n        [\n          \"behaviorTrigger\",\n          ...truthyManualDecorators,\n          ...falsyManualDecorators,\n        ].forEach((item) => {\n          writer.removeSelectionAttribute(item);\n        });\n      } else {\n        // If selection has non-collapsed ranges, we change attribute on nodes inside those ranges\n        // omitting nodes where the `behaviorTrigger` attribute is disallowed.\n        const ranges = model.schema.getValidRanges(\n          selection.getRanges(),\n          \"behaviorTrigger\"\n        );\n\n        // But for the first, check whether the `behaviorTrigger` attribute is allowed on selected blocks (e.g. the \"image\" element).\n        const allowedRanges = [];\n\n        for (const element of selection.getSelectedBlocks()) {\n          if (model.schema.checkAttribute(element, \"behaviorTrigger\")) {\n            allowedRanges.push(writer.createRangeOn(element));\n          }\n        }\n\n        // Ranges that accept the `behaviorTrigger` attribute. Since we will iterate over `allowedRanges`, let's clone it.\n        const rangesToUpdate = allowedRanges.slice();\n\n        // For all selection ranges we want to check whether given range is inside an element that accepts the `behaviorTrigger` attribute.\n        // If so, we don't want to propagate applying the attribute to its children.\n        for (const range of ranges) {\n          if (this._isRangeToUpdate(range, allowedRanges)) {\n            rangesToUpdate.push(range);\n          }\n        }\n\n        for (const range of rangesToUpdate) {\n          writer.setAttribute(\"behaviorTrigger\", id, range);\n\n          truthyManualDecorators.forEach((item) => {\n            writer.setAttribute(item, true, range);\n          });\n\n          falsyManualDecorators.forEach((item) => {\n            writer.removeAttribute(item, range);\n          });\n        }\n      }\n    });\n  }\n\n  /**\n   * Provides information whether a decorator with a given name is present in the currently processed selection.\n   *\n   * @private\n   * @param {String} decoratorName The name of the manual decorator used in the model\n   * @returns {Boolean} The information whether a given decorator is currently present in the selection.\n   */\n  _getDecoratorStateFromModel(decoratorName) {\n    const model = this.editor.model;\n    const selection = model.document.selection;\n    const selectedElement = selection.getSelectedElement();\n\n    // A check for the `LinkImage` plugin. If the selection contains an element, get values from the element.\n    // Currently the selection reads attributes from text nodes only. See #7429 and #7465.\n    if (isTriggerableElement(selectedElement, model.schema)) {\n      return selectedElement.getAttribute(decoratorName);\n    }\n\n    return selection.getAttribute(decoratorName);\n  }\n\n  /**\n   * Checks whether specified `range` is inside an element that accepts the `behaviorTrigger` attribute.\n   *\n   * @private\n   * @param {module:engine/view/range~Range} range A range to check.\n   * @param {Array.<module:engine/view/range~Range>} allowedRanges An array of ranges created on elements where the attribute is accepted.\n   * @returns {Boolean}\n   */\n  _isRangeToUpdate(range, allowedRanges) {\n    for (const allowedRange of allowedRanges) {\n      // A range is inside an element that will have the `behaviorTrigger` attribute. Do not modify its nodes.\n      if (allowedRange.containsRange(range)) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n}\n","import { Command } from \"@ckeditor/ckeditor5-core\";\nimport { findAttributeRange } from \"@ckeditor/ckeditor5-typing\";\n\nimport { isTriggerableElement } from \"./utils\";\n\n/**\n * The unlink command. It is used by the {@link module:link/link~Link link plugin}.\n *\n * @extends module:core/command~Command\n */\nexport default class RemoveBehaviorTriggerCommand extends Command {\n  /**\n   * @inheritDoc\n   */\n  refresh() {\n    const model = this.editor.model;\n    const selection = model.document.selection;\n    const selectedElement = selection.getSelectedElement();\n\n    // A check for any integration that allows linking elements (e.g. `LinkImage`).\n    // Currently the selection reads attributes from text nodes only. See #7429 and #7465.\n    if (isTriggerableElement(selectedElement, model.schema)) {\n      this.isEnabled = model.schema.checkAttribute(\n        selectedElement,\n        \"behaviorTrigger\"\n      );\n    } else {\n      this.isEnabled = model.schema.checkAttributeInSelection(\n        selection,\n        \"behaviorTrigger\"\n      );\n    }\n  }\n\n  /**\n   * Executes the command.\n   *\n   * When the selection is collapsed, it removes the `behaviorTrigger` attribute from each node with the same `behaviorTrigger` attribute value.\n   * When the selection is non-collapsed, it removes the `behaviorTrigger` attribute from each node in selected ranges.\n   *\n   * # Decorators\n   *\n   * If {@link module:link/link~LinkConfig#decorators `config.link.decorators`} is specified,\n   * all configured decorators are removed together with the `behaviorTrigger` attribute.\n   *\n   * @fires execute\n   */\n  execute() {\n    const editor = this.editor;\n    const model = this.editor.model;\n    const selection = model.document.selection;\n    const addBehaviorTriggerCommand = editor.commands.get(\"addBehaviorTrigger\");\n\n    model.change((writer) => {\n      // Get ranges to unlink.\n      const rangesToUnlink = selection.isCollapsed\n        ? [\n            findAttributeRange(\n              selection.getFirstPosition(),\n              \"behaviorTrigger\",\n              selection.getAttribute(\"behaviorTrigger\"),\n              model\n            ),\n          ]\n        : model.schema.getValidRanges(selection.getRanges(), \"behaviorTrigger\");\n\n      // Remove `behaviorTrigger` attribute from specified ranges.\n      for (const range of rangesToUnlink) {\n        writer.removeAttribute(\"behaviorTrigger\", range);\n        // If there are registered custom attributes, then remove them during unlink.\n        if (addBehaviorTriggerCommand) {\n          for (const manualDecorator of addBehaviorTriggerCommand.manualDecorators) {\n            writer.removeAttribute(manualDecorator.id, range);\n          }\n        }\n      }\n    });\n  }\n}\n","import { Plugin } from \"@ckeditor/ckeditor5-core\";\nimport { MouseObserver } from \"@ckeditor/ckeditor5-engine\";\nimport { Input } from \"@ckeditor/ckeditor5-typing\";\nimport { TwoStepCaretMovement } from \"@ckeditor/ckeditor5-typing\";\nimport { inlineHighlight } from \"@ckeditor/ckeditor5-typing\";\nimport { findAttributeRange } from \"@ckeditor/ckeditor5-typing\";\nimport { ClipboardPipeline } from \"@ckeditor/ckeditor5-clipboard\";\nimport { keyCodes } from \"@ckeditor/ckeditor5-utils\";\n\nimport AddBehaviorTriggerCommand from \"./addbehaviortriggercommand\";\nimport RemoveBehaviorTriggerCommand from \"./removebehaviortriggercommand\";\nimport { createBehaviorTriggerElement } from \"./utils\";\n\nimport \"../theme/behaviortrigger.scss\";\n\nconst HIGHLIGHT_CLASS = \"ck-behaviortrigger_selected\";\n\n/**\n * The behavior trigger engine feature.\n *\n * It introduces the `behaviorTrigger=\"id\"` attribute in the model which renders to the view as a `<a data-behavior-trigger=\"id\">` element\n * as well as `'addBehaviorTrigger'` and `'removeBehaviorTrigger'` commands.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class BehaviorTriggerEditing extends Plugin {\n  /**\n   * @inheritDoc\n   */\n  static get pluginName() {\n    return \"BehaviorTriggerEditing\";\n  }\n\n  /**\n   * @inheritDoc\n   */\n  static get requires() {\n    // Clipboard is required for handling cut and paste events while typing over the link.\n    return [TwoStepCaretMovement, Input, ClipboardPipeline];\n  }\n\n  /**\n   * @inheritDoc\n   */\n  init() {\n    const editor = this.editor;\n\n    // Allow link attribute on all inline nodes.\n    editor.model.schema.extend(\"$text\", { allowAttributes: \"behaviorTrigger\" });\n\n    editor.conversion.for(\"dataDowncast\").attributeToElement({\n      model: \"behaviorTrigger\",\n      view: createBehaviorTriggerElement,\n    });\n\n    editor.conversion.for(\"editingDowncast\").attributeToElement({\n      model: \"behaviorTrigger\",\n      view: (id, conversionApi) => {\n        return createBehaviorTriggerElement(id, conversionApi);\n      },\n    });\n\n    editor.conversion.for(\"upcast\").elementToAttribute({\n      view: {\n        name: \"a\",\n        attributes: {\n          \"data-behavior-trigger\": true,\n        },\n      },\n      model: {\n        key: \"behaviorTrigger\",\n        value: (viewElement) =>\n          viewElement.getAttribute(\"data-behavior-trigger\"),\n      },\n    });\n\n    // Create commands.\n    editor.commands.add(\n      \"addBehaviorTrigger\",\n      new AddBehaviorTriggerCommand(editor)\n    );\n    editor.commands.add(\n      \"removeBehaviorTrigger\",\n      new RemoveBehaviorTriggerCommand(editor)\n    );\n\n    // Enable two-step caret movement for `behaviorTrigger` attribute.\n    const twoStepCaretMovementPlugin = editor.plugins.get(TwoStepCaretMovement);\n    twoStepCaretMovementPlugin.registerAttribute(\"behaviorTrigger\");\n\n    // Setup highlight over selected link.\n    inlineHighlight(editor, \"behaviorTrigger\", \"a\", HIGHLIGHT_CLASS);\n\n    // Change the attributes of the selection in certain situations after the trigger was inserted into the document.\n    this._enableInsertContentSelectionAttributesFixer();\n\n    // Handle a click at the beginning/end of a trigger element.\n    this._enableClickingAfterLink();\n\n    // Handle typing over the trigger.\n    this._enableTypingOverLink();\n\n    // Handle removing the content after the trigger element.\n    this._handleDeleteContentAfterLink();\n  }\n\n  /**\n   * Starts listening to {@link module:engine/model/model~Model#event:insertContent} and corrects the model\n   * selection attributes if the selection is at the end of a trigger after inserting the content.\n   *\n   * The purpose of this action is to improve the overall UX because the user is no longer \"trapped\" by the\n   * `behaviorTrigger` attribute of the selection and they can type a \"clean\" (`behaviorTrigger`–less) text right away.\n   *\n   * See https://github.com/ckeditor/ckeditor5/issues/6053.\n   *\n   * @private\n   */\n  _enableInsertContentSelectionAttributesFixer() {\n    const editor = this.editor;\n    const model = editor.model;\n    const selection = model.document.selection;\n\n    this.listenTo(\n      model,\n      \"insertContent\",\n      () => {\n        const nodeBefore = selection.anchor.nodeBefore;\n        const nodeAfter = selection.anchor.nodeAfter;\n\n        // NOTE: ↰ and ↱ represent the gravity of the selection.\n\n        // The only truly valid case is:\n        //\n        //\t\t                                 ↰\n        //\t\t...<$text behaviorTrigger=\"foo\">INSERTED[]</$text>\n        //\n        // If the selection is not \"trapped\" by the `behaviorTrigger` attribute after inserting, there's nothing\n        // to fix there.\n        if (!selection.hasAttribute(\"behaviorTrigger\")) {\n          return;\n        }\n\n        // Filter out the following case where a trigger with the same id (e.g. <a data-behavior-trigger=\"foo\">INSERTED</a>) is inserted\n        // in the middle of an existing link:\n        //\n        // Before insertion:\n        //\t\t                       ↰\n        //\t\t<$text behaviorTrigger=\"foo\">l[]ink</$text>\n        //\n        // Expected after insertion:\n        //\t\t                               ↰\n        //\t\t<$text behaviorTrigger=\"foo\">lINSERTED[]ink</$text>\n        //\n        if (!nodeBefore) {\n          return;\n        }\n\n        // Filter out the following case where the selection has the \"behaviorTrigger\" attribute because the\n        // gravity is overridden and some text with another attribute (e.g. <b>INSERTED</b>) is inserted:\n        //\n        // Before insertion:\n        //\n        //\t\t                       ↱\n        //\t\t<$text behaviorTrigger=\"foo\">[]link</$text>\n        //\n        // Expected after insertion:\n        //\n        //\t\t                                                          ↱\n        //\t\t<$text bold=\"true\">INSERTED</$text><$text behaviorTrigger=\"foo\">[]link</$text>\n        //\n        if (!nodeBefore.hasAttribute(\"behaviorTrigger\")) {\n          return;\n        }\n\n        // Filter out the following case where a link is a inserted in the middle (or before) another link\n        // (different URLs, so they will not merge). In this (let's say weird) case, we can leave the selection\n        // attributes as they are because the user will end up writing in one link or another anyway.\n        //\n        // Before insertion:\n        //\n        //\t\t                       ↰\n        //\t\t<$text behaviorTrigger=\"foo\">l[]ink</$text>\n        //\n        // Expected after insertion:\n        //\n        //\t\t                                                             ↰\n        //\t\t<$text behaviorTrigger=\"foo\">l</$text><$text behaviorTrigger=\"bar\">INSERTED[]</$text><$text behaviorTrigger=\"foo\">ink</$text>\n        //\n        if (nodeAfter && nodeAfter.hasAttribute(\"behaviorTrigger\")) {\n          return;\n        }\n\n        model.change((writer) => {\n          removeLinkAttributesFromSelection(\n            writer,\n            getLinkAttributesAllowedOnText(model.schema)\n          );\n        });\n      },\n      { priority: \"low\" }\n    );\n  }\n\n  /**\n   * Starts listening to {@link module:engine/view/document~Document#event:mousedown} and\n   * {@link module:engine/view/document~Document#event:selectionChange} and puts the selection before/after a link node\n   * if clicked at the beginning/ending of the link.\n   *\n   * The purpose of this action is to allow typing around the link node directly after a click.\n   *\n   * See https://github.com/ckeditor/ckeditor5/issues/1016.\n   *\n   * @private\n   */\n  _enableClickingAfterLink() {\n    const editor = this.editor;\n    const model = editor.model;\n\n    editor.editing.view.addObserver(MouseObserver);\n\n    let clicked = false;\n\n    // Detect the click.\n    this.listenTo(editor.editing.view.document, \"mousedown\", () => {\n      clicked = true;\n    });\n\n    // When the selection has changed...\n    this.listenTo(editor.editing.view.document, \"selectionChange\", () => {\n      if (!clicked) {\n        return;\n      }\n\n      // ...and it was caused by the click...\n      clicked = false;\n\n      const selection = model.document.selection;\n\n      // ...and no text is selected...\n      if (!selection.isCollapsed) {\n        return;\n      }\n\n      // ...and clicked text is the link...\n      if (!selection.hasAttribute(\"behaviorTrigger\")) {\n        return;\n      }\n\n      const position = selection.getFirstPosition();\n      const linkRange = findAttributeRange(\n        position,\n        \"behaviorTrigger\",\n        selection.getAttribute(\"behaviorTrigger\"),\n        model\n      );\n\n      // ...check whether clicked start/end boundary of the link.\n      // If so, remove the `behaviorTrigger` attribute.\n      if (\n        position.isTouching(linkRange.start) ||\n        position.isTouching(linkRange.end)\n      ) {\n        model.change((writer) => {\n          removeLinkAttributesFromSelection(\n            writer,\n            getLinkAttributesAllowedOnText(model.schema)\n          );\n        });\n      }\n    });\n  }\n\n  /**\n   * Starts listening to {@link module:engine/model/model~Model#deleteContent} and {@link module:engine/model/model~Model#insertContent}\n   * and checks whether typing over the link. If so, attributes of removed text are preserved and applied to the inserted text.\n   *\n   * The purpose of this action is to allow modifying a text without loosing the `behaviorTrigger` attribute (and other).\n   *\n   * See https://github.com/ckeditor/ckeditor5/issues/4762.\n   *\n   * @private\n   */\n  _enableTypingOverLink() {\n    const editor = this.editor;\n    const view = editor.editing.view;\n\n    // Selection attributes when started typing over the link.\n    let selectionAttributes;\n\n    // Whether pressed `Backspace` or `Delete`. If so, attributes should not be preserved.\n    let deletedContent;\n\n    // Detect pressing `Backspace` / `Delete`.\n    this.listenTo(\n      view.document,\n      \"delete\",\n      () => {\n        deletedContent = true;\n      },\n      { priority: \"high\" }\n    );\n\n    // Listening to `model#deleteContent` allows detecting whether selected content was a link.\n    // If so, before removing the element, we will copy its attributes.\n    this.listenTo(\n      editor.model,\n      \"deleteContent\",\n      () => {\n        const selection = editor.model.document.selection;\n\n        // Copy attributes only if anything is selected.\n        if (selection.isCollapsed) {\n          return;\n        }\n\n        // When the content was deleted, do not preserve attributes.\n        if (deletedContent) {\n          deletedContent = false;\n\n          return;\n        }\n\n        // Enabled only when typing.\n        if (!isTyping(editor)) {\n          return;\n        }\n\n        if (shouldCopyAttributes(editor.model)) {\n          selectionAttributes = selection.getAttributes();\n        }\n      },\n      { priority: \"high\" }\n    );\n\n    // Listening to `model#insertContent` allows detecting the content insertion.\n    // We want to apply attributes that were removed while typing over the link.\n    this.listenTo(\n      editor.model,\n      \"insertContent\",\n      (evt, [element]) => {\n        deletedContent = false;\n\n        // Enabled only when typing.\n        if (!isTyping(editor)) {\n          return;\n        }\n\n        if (!selectionAttributes) {\n          return;\n        }\n\n        editor.model.change((writer) => {\n          for (const [attribute, value] of selectionAttributes) {\n            writer.setAttribute(attribute, value, element);\n          }\n        });\n\n        selectionAttributes = null;\n      },\n      { priority: \"high\" }\n    );\n  }\n\n  /**\n   * Starts listening to {@link module:engine/model/model~Model#deleteContent} and checks whether\n   * removing a content right after the \"behaviorTrigger\" attribute.\n   *\n   * If so, the selection should not preserve the `behaviorTrigger` attribute. However, if\n   * the {@link module:typing/twostepcaretmovement~TwoStepCaretMovement} plugin is active and\n   * the selection has the \"behaviorTrigger\" attribute due to overriden gravity (at the end), the `behaviorTrigger` attribute should stay untouched.\n   *\n   * The purpose of this action is to allow removing the link text and keep the selection outside the link.\n   *\n   * See https://github.com/ckeditor/ckeditor5/issues/7521.\n   *\n   * @private\n   */\n  _handleDeleteContentAfterLink() {\n    const editor = this.editor;\n    const model = editor.model;\n    const selection = model.document.selection;\n    const view = editor.editing.view;\n\n    // A flag whether attributes `behaviorTrigger` attribute should be preserved.\n    let shouldPreserveAttributes = false;\n\n    // A flag whether the `Backspace` key was pressed.\n    let hasBackspacePressed = false;\n\n    // Detect pressing `Backspace`.\n    this.listenTo(\n      view.document,\n      \"delete\",\n      (evt, data) => {\n        hasBackspacePressed = data.domEvent.keyCode === keyCodes.backspace;\n      },\n      { priority: \"high\" }\n    );\n\n    // Before removing the content, check whether the selection is inside a link or at the end of link but with 2-SCM enabled.\n    // If so, we want to preserve link attributes.\n    this.listenTo(\n      model,\n      \"deleteContent\",\n      () => {\n        // Reset the state.\n        shouldPreserveAttributes = false;\n\n        const position = selection.getFirstPosition();\n        const behaviorTrigger = selection.getAttribute(\"behaviorTrigger\");\n\n        if (!behaviorTrigger) {\n          return;\n        }\n\n        const linkRange = findAttributeRange(\n          position,\n          \"behaviorTrigger\",\n          behaviorTrigger,\n          model\n        );\n\n        // Preserve `behaviorTrigger` attribute if the selection is in the middle of the link or\n        // the selection is at the end of the link and 2-SCM is activated.\n        shouldPreserveAttributes =\n          linkRange.containsPosition(position) ||\n          linkRange.end.isEqual(position);\n      },\n      { priority: \"high\" }\n    );\n\n    // After removing the content, check whether the current selection should preserve the `behaviorTrigger` attribute.\n    this.listenTo(\n      model,\n      \"deleteContent\",\n      () => {\n        // If didn't press `Backspace`.\n        if (!hasBackspacePressed) {\n          return;\n        }\n\n        hasBackspacePressed = false;\n\n        // Disable the mechanism if inside a link (`<$text url=\"foo\">F[]oo</$text>` or <$text url=\"foo\">Foo[]</$text>`).\n        if (shouldPreserveAttributes) {\n          return;\n        }\n\n        // Use `model.enqueueChange()` in order to execute the callback at the end of the changes process.\n        editor.model.enqueueChange((writer) => {\n          removeLinkAttributesFromSelection(\n            writer,\n            getLinkAttributesAllowedOnText(model.schema)\n          );\n        });\n      },\n      { priority: \"low\" }\n    );\n  }\n}\n\n// Make the selection free of link-related model attributes.\n// All link-related model attributes start with \"link\". That includes not only \"behaviorTrigger\"\n// but also all decorator attributes (they have dynamic names), or even custom plugins.\n//\n// @param {module:engine/model/writer~Writer} writer\n// @param {Array.<String>} linkAttributes\nfunction removeLinkAttributesFromSelection(writer, linkAttributes) {\n  writer.removeSelectionAttribute(\"behaviorTrigger\");\n\n  for (const attribute of linkAttributes) {\n    writer.removeSelectionAttribute(attribute);\n  }\n}\n\n// Checks whether selection's attributes should be copied to the new inserted text.\n//\n// @param {module:engine/model/model~Model} model\n// @returns {Boolean}\nfunction shouldCopyAttributes(model) {\n  const selection = model.document.selection;\n  const firstPosition = selection.getFirstPosition();\n  const lastPosition = selection.getLastPosition();\n  const nodeAtFirstPosition = firstPosition.nodeAfter;\n\n  // The text link node does not exist...\n  if (!nodeAtFirstPosition) {\n    return false;\n  }\n\n  // ...or it isn't the text node...\n  if (!nodeAtFirstPosition.is(\"$text\")) {\n    return false;\n  }\n\n  // ...or isn't the link.\n  if (!nodeAtFirstPosition.hasAttribute(\"behaviorTrigger\")) {\n    return false;\n  }\n\n  // `textNode` = the position is inside the link element.\n  // `nodeBefore` = the position is at the end of the link element.\n  const nodeAtLastPosition = lastPosition.textNode || lastPosition.nodeBefore;\n\n  // If both references the same node selection contains a single text node.\n  if (nodeAtFirstPosition === nodeAtLastPosition) {\n    return true;\n  }\n\n  // If nodes are not equal, maybe the link nodes has defined additional attributes inside.\n  // First, we need to find the entire link range.\n  const linkRange = findAttributeRange(\n    firstPosition,\n    \"behaviorTrigger\",\n    nodeAtFirstPosition.getAttribute(\"behaviorTrigger\"),\n    model\n  );\n\n  // Then we can check whether selected range is inside the found link range. If so, attributes should be preserved.\n  return linkRange.containsRange(\n    model.createRange(firstPosition, lastPosition),\n    true\n  );\n}\n\n// Checks whether provided changes were caused by typing.\n//\n// @params {module:core/editor/editor~Editor} editor\n// @returns {Boolean}\nfunction isTyping(editor) {\n  const currentBatch = editor.model.change((writer) => writer.batch);\n\n  return currentBatch.isTyping;\n}\n\n// Returns an array containing names of the attributes allowed on `$text` that describes the link item.\n//\n// @param {module:engine/model/schema~Schema} schema\n// @returns {Array.<String>}\nfunction getLinkAttributesAllowedOnText(schema) {\n  const textAttributes = schema.getDefinition(\"$text\").allowAttributes;\n\n  return textAttributes.filter((attribute) =>\n    attribute.startsWith(\"behaviorTrigger\")\n  );\n}\n","import {\n  ButtonView,\n  FocusCycler,\n  LabeledFieldView,\n  SwitchButtonView,\n  View,\n  ViewCollection,\n  createLabeledInputText,\n  submitHandler,\n} from \"@ckeditor/ckeditor5-ui\";\nimport { FocusTracker, KeystrokeHandler } from \"@ckeditor/ckeditor5-utils\";\nimport { icons } from \"@ckeditor/ckeditor5-core\";\n\nimport \"@ckeditor/ckeditor5-ui/theme/components/responsive-form/responsiveform.css\";\nimport \"../../theme/behaviortriggerform.scss\";\n\n/**\n * The link form view controller class.\n *\n * See {@link module:link/ui/linkformview~LinkFormView}.\n *\n * @extends module:ui/view~View\n */\nexport default class BehaviorTriggerFormView extends View {\n  /**\n   * Creates an instance of the {@link module:link/ui/linkformview~LinkFormView} class.\n   *\n   * Also see {@link #render}.\n   *\n   * @param {module:utils/locale~Locale} [locale] The localization services instance.\n   * @param {module:link/linkcommand~LinkCommand} linkCommand Reference to {@link module:link/linkcommand~LinkCommand}.\n   * @param {String} [protocol] A value of a protocol to be displayed in the input's placeholder.\n   */\n  constructor(locale, addBehaviorTriggerCommand) {\n    super(locale);\n\n    const t = locale.t;\n\n    /**\n     * Tracks information about DOM focus in the form.\n     *\n     * @readonly\n     * @member {module:utils/focustracker~FocusTracker}\n     */\n    this.focusTracker = new FocusTracker();\n\n    /**\n     * An instance of the {@link module:utils/keystrokehandler~KeystrokeHandler}.\n     *\n     * @readonly\n     * @member {module:utils/keystrokehandler~KeystrokeHandler}\n     */\n    this.keystrokes = new KeystrokeHandler();\n\n    /**\n     * The id input view.\n     *\n     * @member {module:ui/labeledfield/labeledfieldview~LabeledFieldView}\n     */\n    this.idInputView = this._createIdInput();\n\n    /**\n     * The Save button view.\n     *\n     * @member {module:ui/button/buttonview~ButtonView}\n     */\n    this.saveButtonView = this._createButton(\n      t(\"Save\"),\n      icons.check,\n      \"ck-button-save\"\n    );\n    this.saveButtonView.type = \"submit\";\n\n    /**\n     * The Cancel button view.\n     *\n     * @member {module:ui/button/buttonview~ButtonView}\n     */\n    this.cancelButtonView = this._createButton(\n      t(\"Cancel\"),\n      icons.cancel,\n      \"ck-button-cancel\",\n      \"cancel\"\n    );\n\n    /**\n     * A collection of {@link module:ui/button/switchbuttonview~SwitchButtonView},\n     * which corresponds to {@link module:link/linkcommand~LinkCommand#manualDecorators manual decorators}\n     * configured in the editor.\n     *\n     * @private\n     * @readonly\n     * @type {module:ui/viewcollection~ViewCollection}\n     */\n    this._manualDecoratorSwitches = this._createManualDecoratorSwitches(\n      addBehaviorTriggerCommand\n    );\n\n    /**\n     * A collection of child views in the form.\n     *\n     * @readonly\n     * @type {module:ui/viewcollection~ViewCollection}\n     */\n    this.children = this._createFormChildren(\n      addBehaviorTriggerCommand.manualDecorators\n    );\n\n    /**\n     * A collection of views that can be focused in the form.\n     *\n     * @readonly\n     * @protected\n     * @member {module:ui/viewcollection~ViewCollection}\n     */\n    this._focusables = new ViewCollection();\n\n    /**\n     * Helps cycling over {@link #_focusables} in the form.\n     *\n     * @readonly\n     * @protected\n     * @member {module:ui/focuscycler~FocusCycler}\n     */\n    this._focusCycler = new FocusCycler({\n      focusables: this._focusables,\n      focusTracker: this.focusTracker,\n      keystrokeHandler: this.keystrokes,\n      actions: {\n        // Navigate form fields backwards using the Shift + Tab keystroke.\n        focusPrevious: \"shift + tab\",\n\n        // Navigate form fields forwards using the Tab key.\n        focusNext: \"tab\",\n      },\n    });\n\n    const classList = [\"ck\", \"ck-behaviortrigger-form\", \"ck-responsive-form\"];\n\n    if (addBehaviorTriggerCommand.manualDecorators.length) {\n      classList.push(\n        \"ck-behaviortrigger-form_layout-vertical\",\n        \"ck-vertical-form\"\n      );\n    }\n\n    this.setTemplate({\n      tag: \"form\",\n\n      attributes: {\n        class: classList,\n\n        // https://github.com/ckeditor/ckeditor5-link/issues/90\n        tabindex: \"-1\",\n      },\n\n      children: this.children,\n    });\n  }\n\n  /**\n   * Obtains the state of the {@link module:ui/button/switchbuttonview~SwitchButtonView switch buttons} representing\n   * {@link module:link/linkcommand~LinkCommand#manualDecorators manual link decorators}\n   * in the {@link module:link/ui/linkformview~LinkFormView}.\n   *\n   * @returns {Object.<String,Boolean>} Key-value pairs, where the key is the name of the decorator and the value is\n   * its state.\n   */\n  getDecoratorSwitchesState() {\n    return Array.from(this._manualDecoratorSwitches).reduce(\n      (accumulator, switchButton) => {\n        accumulator[switchButton.name] = switchButton.isOn;\n        return accumulator;\n      },\n      {}\n    );\n  }\n\n  /**\n   * @inheritDoc\n   */\n  render() {\n    super.render();\n\n    submitHandler({\n      view: this,\n    });\n\n    const childViews = [\n      this.idInputView,\n      ...this._manualDecoratorSwitches,\n      this.saveButtonView,\n      this.cancelButtonView,\n    ];\n\n    childViews.forEach((v) => {\n      // Register the view as focusable.\n      this._focusables.add(v);\n\n      // Register the view in the focus tracker.\n      this.focusTracker.add(v.element);\n    });\n\n    // Start listening for the keystrokes coming from #element.\n    this.keystrokes.listenTo(this.element);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  destroy() {\n    super.destroy();\n\n    this.focusTracker.destroy();\n    this.keystrokes.destroy();\n  }\n\n  /**\n   * Focuses the fist {@link #_focusables} in the form.\n   */\n  focus() {\n    this._focusCycler.focusFirst();\n  }\n\n  /**\n   * Creates a labeled input view.\n   *\n   * @private\n   * @returns {module:ui/labeledfield/labeledfieldview~LabeledFieldView} Labeled field view instance.\n   */\n  _createIdInput() {\n    const t = this.locale.t;\n    const labeledInput = new LabeledFieldView(\n      this.locale,\n      createLabeledInputText\n    );\n\n    labeledInput.label = t(\"Trigger ID\");\n\n    return labeledInput;\n  }\n\n  /**\n   * Creates a button view.\n   *\n   * @private\n   * @param {String} label The button label.\n   * @param {String} icon The button icon.\n   * @param {String} className The additional button CSS class name.\n   * @param {String} [eventName] An event name that the `ButtonView#execute` event will be delegated to.\n   * @returns {module:ui/button/buttonview~ButtonView} The button view instance.\n   */\n  _createButton(label, icon, className, eventName) {\n    const button = new ButtonView(this.locale);\n\n    button.set({\n      label,\n      icon,\n      tooltip: true,\n    });\n\n    button.extendTemplate({\n      attributes: {\n        class: className,\n      },\n    });\n\n    if (eventName) {\n      button.delegate(\"execute\").to(this, eventName);\n    }\n\n    return button;\n  }\n\n  /**\n   * Populates {@link module:ui/viewcollection~ViewCollection} of {@link module:ui/button/switchbuttonview~SwitchButtonView}\n   * made based on {@link module:link/linkcommand~LinkCommand#manualDecorators}.\n   *\n   * @private\n   * @param {module:link/linkcommand~LinkCommand} linkCommand A reference to the link command.\n   * @returns {module:ui/viewcollection~ViewCollection} of switch buttons.\n   */\n  _createManualDecoratorSwitches(addBehaviorTriggerCommand) {\n    const switches = this.createCollection();\n\n    for (const manualDecorator of addBehaviorTriggerCommand.manualDecorators) {\n      const switchButton = new SwitchButtonView(this.locale);\n\n      switchButton.set({\n        name: manualDecorator.id,\n        label: manualDecorator.label,\n        withText: true,\n      });\n\n      switchButton\n        .bind(\"isOn\")\n        .toMany(\n          [manualDecorator, addBehaviorTriggerCommand],\n          \"value\",\n          (decoratorValue, commandValue) => {\n            return commandValue === undefined && decoratorValue === undefined\n              ? manualDecorator.defaultValue\n              : decoratorValue;\n          }\n        );\n\n      switchButton.on(\"execute\", () => {\n        manualDecorator.set(\"value\", !switchButton.isOn);\n      });\n\n      switches.add(switchButton);\n    }\n\n    return switches;\n  }\n\n  /**\n   * Populates the {@link #children} collection of the form.\n   *\n   * If {@link module:link/linkcommand~LinkCommand#manualDecorators manual decorators} are configured in the editor, it creates an\n   * additional `View` wrapping all {@link #_manualDecoratorSwitches} switch buttons corresponding\n   * to these decorators.\n   *\n   * @private\n   * @param {module:utils/collection~Collection} manualDecorators A reference to\n   * the collection of manual decorators stored in the link command.\n   * @returns {module:ui/viewcollection~ViewCollection} The children of link form view.\n   */\n  _createFormChildren(manualDecorators) {\n    const children = this.createCollection();\n\n    children.add(this.idInputView);\n\n    if (manualDecorators.length) {\n      const additionalButtonsView = new View();\n\n      additionalButtonsView.setTemplate({\n        tag: \"ul\",\n        children: this._manualDecoratorSwitches.map((switchButton) => ({\n          tag: \"li\",\n          children: [switchButton],\n          attributes: {\n            class: [\"ck\", \"ck-list__item\"],\n          },\n        })),\n        attributes: {\n          class: [\"ck\", \"ck-reset\", \"ck-list\"],\n        },\n      });\n      children.add(additionalButtonsView);\n    }\n\n    children.add(this.saveButtonView);\n    children.add(this.cancelButtonView);\n\n    return children;\n  }\n}\n","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" xml:space=\\\"preserve\\\" viewBox=\\\"0 0 22 22\\\">\\n  <path d=\\\"m15.34 1.768-4.506 7.721 5.661.797v.329L6.687 20.26l-.028-.029 4.641-8.105-5.795-.852v-.329l9.782-9.205zM19.035 19.465 17.48 21.02a.824.824 0 1 1-1.207-1.125l.041-.041 1.555-1.557-1.557-1.555a.824.824 0 0 1 1.166-1.166l1.556 1.555 1.557-1.557a.825.825 0 1 1 1.166 1.168l-1.555 1.555 1.555 1.557a.824.824 0 1 1-1.166 1.166l-1.556-1.555z\\\"/>\\n</svg>\\n\";","import {\n  ButtonView,\n  LabelView,\n  View,\n  ViewCollection,\n  FocusCycler,\n} from \"@ckeditor/ckeditor5-ui\";\nimport { FocusTracker, KeystrokeHandler } from \"@ckeditor/ckeditor5-utils\";\nimport { icons } from \"@ckeditor/ckeditor5-core\";\n\nimport \"@ckeditor/ckeditor5-ui/theme/components/responsive-form/responsiveform.css\";\nimport \"../../theme/behaviortriggeractions.scss\";\n\nimport removeBehaviorTriggerIcon from \"../../theme/icons/removebehaviortrigger.svg\";\n\n/**\n * The link actions view class. This view displays the link preview, allows\n * unlinking or editing the link.\n *\n * @extends module:ui/view~View\n */\nexport default class BehaviorTriggerActionsView extends View {\n  /**\n   * @inheritDoc\n   */\n  constructor(locale) {\n    super(locale);\n\n    const t = locale.t;\n\n    /**\n     * Tracks information about DOM focus in the actions.\n     *\n     * @readonly\n     * @member {module:utils/focustracker~FocusTracker}\n     */\n    this.focusTracker = new FocusTracker();\n\n    /**\n     * An instance of the {@link module:utils/keystrokehandler~KeystrokeHandler}.\n     *\n     * @readonly\n     * @member {module:utils/keystrokehandler~KeystrokeHandler}\n     */\n    this.keystrokes = new KeystrokeHandler();\n\n    /**\n     * The id preview view.\n     *\n     * @member {module:ui/view~View}\n     */\n    this.previewLabelView = this._createPreviewLabel();\n\n    /**\n     * The unlink button view.\n     *\n     * @member {module:ui/button/buttonview~ButtonView}\n     */\n    this.removeTriggerButtonView = this._createButton(\n      t(\"Remove\"),\n      removeBehaviorTriggerIcon,\n      \"removeBehaviorTrigger\"\n    );\n\n    /**\n     * The edit link button view.\n     *\n     * @member {module:ui/button/buttonview~ButtonView}\n     */\n    this.editButtonView = this._createButton(t(\"Edit\"), icons.pencil, \"edit\");\n\n    /**\n     * The value of the trigger \"id\" attribute of use in the {@link #previewLabelView}.\n     *\n     * @observable\n     * @member {String}\n     */\n    this.set(\"id\");\n\n    /**\n     * A collection of views that can be focused in the view.\n     *\n     * @readonly\n     * @protected\n     * @member {module:ui/viewcollection~ViewCollection}\n     */\n    this._focusables = new ViewCollection();\n\n    /**\n     * Helps cycling over {@link #_focusables} in the view.\n     *\n     * @readonly\n     * @protected\n     * @member {module:ui/focuscycler~FocusCycler}\n     */\n    this._focusCycler = new FocusCycler({\n      focusables: this._focusables,\n      focusTracker: this.focusTracker,\n      keystrokeHandler: this.keystrokes,\n      actions: {\n        // Navigate fields backwards using the Shift + Tab keystroke.\n        focusPrevious: \"shift + tab\",\n\n        // Navigate fields forwards using the Tab key.\n        focusNext: \"tab\",\n      },\n    });\n\n    this.setTemplate({\n      tag: \"div\",\n\n      attributes: {\n        class: [\"ck\", \"ck-behaviortrigger-actions\", \"ck-responsive-form\"],\n\n        // https://github.com/ckeditor/ckeditor5-link/issues/90\n        tabindex: \"-1\",\n      },\n\n      children: [\n        this.previewLabelView,\n        this.editButtonView,\n        this.removeTriggerButtonView,\n      ],\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  render() {\n    super.render();\n\n    const childViews = [\n      this.previewLabelView,\n      this.editButtonView,\n      this.removeTriggerButtonView,\n    ];\n\n    childViews.forEach((v) => {\n      // Register the view as focusable.\n      this._focusables.add(v);\n\n      // Register the view in the focus tracker.\n      this.focusTracker.add(v.element);\n    });\n\n    // Start listening for the keystrokes coming from #element.\n    this.keystrokes.listenTo(this.element);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  destroy() {\n    super.destroy();\n\n    this.focusTracker.destroy();\n    this.keystrokes.destroy();\n  }\n\n  /**\n   * Focuses the fist {@link #_focusables} in the actions.\n   */\n  focus() {\n    this._focusCycler.focusFirst();\n  }\n\n  /**\n   * Creates a button view.\n   *\n   * @private\n   * @param {String} label The button label.\n   * @param {String} icon The button icon.\n   * @param {String} [eventName] An event name that the `ButtonView#execute` event will be delegated to.\n   * @returns {module:ui/button/buttonview~ButtonView} The button view instance.\n   */\n  _createButton(label, icon, eventName) {\n    const button = new ButtonView(this.locale);\n\n    button.set({\n      label,\n      icon,\n      tooltip: true,\n    });\n\n    button.delegate(\"execute\").to(this, eventName);\n\n    return button;\n  }\n\n  /**\n   * Creates a trigger id preview label.\n   *\n   * @private\n   * @returns {module:ui/label/labelview~LabelView} The label view instance.\n   */\n  _createPreviewLabel() {\n    const label = new LabelView(this.locale);\n    const t = this.t;\n\n    label.extendTemplate({\n      attributes: {\n        class: [\"ck\", \"ck-behaviortrigger-actions__preview\"],\n      },\n    });\n\n    label.bind(\"text\").to(this, \"id\", (id) => {\n      return id || t(\"This trigger has no ID\");\n    });\n\n    return label;\n  }\n}\n","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" xml:space=\\\"preserve\\\" viewBox=\\\"0 0 22 22\\\">\\n  <path d=\\\"m15.34 1.768-4.506 7.721 5.661.797v.329L6.687 20.26l-.028-.029 4.641-8.105-5.795-.852v-.329l9.782-9.205z\\\"/>\\n</svg>\\n\";","import { Plugin } from \"@ckeditor/ckeditor5-core\";\nimport { ClickObserver } from \"@ckeditor/ckeditor5-engine\";\nimport {\n  ButtonView,\n  ContextualBalloon,\n  clickOutsideHandler,\n  CssTransitionDisablerMixin,\n} from \"@ckeditor/ckeditor5-ui\";\nimport { isWidget } from \"@ckeditor/ckeditor5-widget\";\nimport viewToPlainText from \"@ckeditor/ckeditor5-clipboard/src/utils/viewtoplaintext\";\n\nimport BehaviorTriggerFormView from \"./ui/behaviortriggerformview\";\nimport BehaviorTriggerActionsView from \"./ui/behaviortriggeractionsview\";\nimport { isLinkElement, TRIGGER_KEYSTROKE } from \"./utils\";\n\nimport addBehaviorTriggerIcon from \"../theme/icons/addbehaviortrigger.svg\";\n\nconst VISUAL_SELECTION_MARKER_NAME = \"behaviortrigger-ui\";\n\n/**\n * The behavior trigger UI plugin. It introduces the `'addbehaviortrigger'` and `'removebehaviortrigger'` buttons and support for the <kbd>Ctrl+T</kbd> keystroke.\n *\n * It uses the\n * {@link module:ui/panel/balloon/contextualballoon~ContextualBalloon contextual balloon plugin}.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class BehaviorTriggerUI extends Plugin {\n  /**\n   * @inheritDoc\n   */\n  static get requires() {\n    return [ContextualBalloon];\n  }\n\n  /**\n   * @inheritDoc\n   */\n  static get pluginName() {\n    return \"BehaviorTriggerUI\";\n  }\n\n  /**\n   * @inheritDoc\n   */\n  init() {\n    const editor = this.editor;\n\n    editor.editing.view.addObserver(ClickObserver);\n\n    /**\n     * The actions view displayed inside of the balloon.\n     *\n     * @member {module:link/ui/BehaviorTriggerActionsView~BehaviorTriggerActionsView}\n     */\n    this.actionsView = this._createActionsView();\n\n    /**\n     * The form view displayed inside the balloon.\n     *\n     * @member {module:link/ui/BehaviorTriggerFormView~BehaviorTriggerFormView}\n     */\n    this.formView = this._createFormView();\n\n    /**\n     * The contextual balloon plugin instance.\n     *\n     * @private\n     * @member {module:ui/panel/balloon/contextualballoon~ContextualBalloon}\n     */\n    this._balloon = editor.plugins.get(ContextualBalloon);\n\n    // Create toolbar buttons.\n    this._createToolbarAddButton();\n\n    // Attach lifecycle actions to the the balloon.\n    this._enableUserBalloonInteractions();\n\n    // Renders a fake visual selection marker on an expanded selection.\n    editor.conversion.for(\"editingDowncast\").markerToHighlight({\n      model: VISUAL_SELECTION_MARKER_NAME,\n      view: {\n        classes: [\"ck-fake-behaviortrigger-selection\"],\n      },\n    });\n\n    // Renders a fake visual selection marker on a collapsed selection.\n    editor.conversion.for(\"editingDowncast\").markerToElement({\n      model: VISUAL_SELECTION_MARKER_NAME,\n      view: {\n        name: \"span\",\n        classes: [\n          \"ck-fake-behaviortrigger-selection\",\n          \"ck-fake-behaviortrigger-selection_collapsed\",\n        ],\n      },\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  destroy() {\n    super.destroy();\n\n    // Destroy created UI components as they are not automatically destroyed (see ckeditor5#1341).\n    this.formView.destroy();\n  }\n\n  /**\n   * Creates the {@link module:link/ui/BehaviorTriggerActionsView~BehaviorTriggerActionsView} instance.\n   *\n   * @private\n   * @returns {module:link/ui/BehaviorTriggerActionsView~BehaviorTriggerActionsView} The link actions view instance.\n   */\n  _createActionsView() {\n    const editor = this.editor;\n    const actionsView = new BehaviorTriggerActionsView(editor.locale);\n    const addBehaviorTriggerCommand = editor.commands.get(\"addBehaviorTrigger\");\n    const removeBehaviorTriggerCommand = editor.commands.get(\n      \"removeBehaviorTrigger\"\n    );\n\n    actionsView.bind(\"id\").to(addBehaviorTriggerCommand, \"value\");\n    actionsView.editButtonView.bind(\"isEnabled\").to(addBehaviorTriggerCommand);\n    actionsView.removeTriggerButtonView\n      .bind(\"isEnabled\")\n      .to(removeBehaviorTriggerCommand);\n\n    // Execute removeBehaviorTrigger command after clicking on the \"Edit\" button.\n    this.listenTo(actionsView, \"edit\", () => {\n      this._addFormView();\n    });\n\n    // Execute removeBehaviorTrigger command after clicking on the \"Remove\" button.\n    this.listenTo(actionsView, \"removeBehaviorTrigger\", () => {\n      editor.execute(\"removeBehaviorTrigger\");\n      this._hideUI();\n    });\n\n    // Close the panel on esc key press when the **actions have focus**.\n    actionsView.keystrokes.set(\"Esc\", (data, cancel) => {\n      this._hideUI();\n      cancel();\n    });\n\n    // Open the form view on Ctrl+K when the **actions have focus**..\n    actionsView.keystrokes.set(TRIGGER_KEYSTROKE, (data, cancel) => {\n      this._addFormView();\n      cancel();\n    });\n\n    return actionsView;\n  }\n\n  /**\n   * Creates the {@link module:link/ui/BehaviorTriggerFormView~BehaviorTriggerFormView} instance.\n   *\n   * @private\n   * @returns {module:link/ui/BehaviorTriggerFormView~BehaviorTriggerFormView} The link form view instance.\n   */\n  _createFormView() {\n    const editor = this.editor;\n    const addBehaviorTriggerCommand = editor.commands.get(\"addBehaviorTrigger\");\n\n    const formView = new (CssTransitionDisablerMixin(BehaviorTriggerFormView))(\n      editor.locale,\n      addBehaviorTriggerCommand\n    );\n\n    formView.idInputView.fieldView\n      .bind(\"value\")\n      .to(addBehaviorTriggerCommand, \"value\");\n\n    // Form elements should be read-only when corresponding commands are disabled.\n    formView.idInputView\n      .bind(\"isReadOnly\")\n      .to(addBehaviorTriggerCommand, \"isEnabled\", (value) => !value);\n    formView.saveButtonView.bind(\"isEnabled\").to(addBehaviorTriggerCommand);\n\n    // Execute link command after clicking the \"Save\" button.\n    this.listenTo(formView, \"submit\", () => {\n      const { value } = formView.idInputView.fieldView.element;\n      editor.execute(\n        \"addBehaviorTrigger\",\n        value,\n        formView.getDecoratorSwitchesState()\n      );\n      this._closeFormView();\n    });\n\n    // Hide the panel after clicking the \"Cancel\" button.\n    this.listenTo(formView, \"cancel\", () => {\n      this._closeFormView();\n    });\n\n    // Close the panel on esc key press when the **form has focus**.\n    formView.keystrokes.set(\"Esc\", (data, cancel) => {\n      this._closeFormView();\n      cancel();\n    });\n\n    return formView;\n  }\n\n  /**\n   * Creates a toolbar Link button. Clicking this button will show\n   * a {@link #_balloon} attached to the selection.\n   *\n   * @private\n   */\n  _createToolbarAddButton() {\n    const editor = this.editor;\n    const addBehaviorTriggerCommand = editor.commands.get(\"addBehaviorTrigger\");\n    const t = editor.t;\n\n    // Handle the `Ctrl+K` keystroke and show the panel.\n    editor.keystrokes.set(TRIGGER_KEYSTROKE, (keyEvtData, cancel) => {\n      // Prevent focusing the search bar in FF, Chrome and Edge. See https://github.com/ckeditor/ckeditor5/issues/4811.\n      cancel();\n\n      if (addBehaviorTriggerCommand.isEnabled) {\n        this._showUI(true);\n      }\n    });\n\n    editor.ui.componentFactory.add(\"addBehaviorTrigger\", (locale) => {\n      const button = new ButtonView(locale);\n\n      button.label = t(\"Behavior\");\n      button.icon = addBehaviorTriggerIcon;\n      button.keystroke = TRIGGER_KEYSTROKE;\n      button.tooltip = true;\n      button.withText = true;\n      button.isToggleable = true;\n\n      // Bind button to the command.\n      button.bind(\"isEnabled\").to(addBehaviorTriggerCommand, \"isEnabled\");\n      button\n        .bind(\"isOn\")\n        .to(addBehaviorTriggerCommand, \"value\", (value) => !!value);\n\n      // Show the panel on button click.\n      this.listenTo(button, \"execute\", () => this._showUI(true));\n\n      return button;\n    });\n  }\n\n  /**\n   * Attaches actions that control whether the balloon panel containing the\n   * {@link #formView} is visible or not.\n   *\n   * @private\n   */\n  _enableUserBalloonInteractions() {\n    const viewDocument = this.editor.editing.view.document;\n\n    // Handle click on view document and show panel when selection is placed inside the link element.\n    // Keep panel open until selection will be inside the same link element.\n    this.listenTo(viewDocument, \"click\", () => {\n      const parentLink = this._getSelectedLinkElement();\n\n      if (parentLink) {\n        // Then show panel but keep focus inside editor editable.\n        this._showUI();\n      }\n    });\n\n    // Focus the form if the balloon is visible and the Tab key has been pressed.\n    this.editor.keystrokes.set(\n      \"Tab\",\n      (data, cancel) => {\n        if (\n          this._areActionsVisible &&\n          !this.actionsView.focusTracker.isFocused\n        ) {\n          this.actionsView.focus();\n          cancel();\n        }\n      },\n      {\n        // Use the high priority because the link UI navigation is more important\n        // than other feature's actions, e.g. list indentation.\n        // https://github.com/ckeditor/ckeditor5-link/issues/146\n        priority: \"high\",\n      }\n    );\n\n    // Close the panel on the Esc key press when the editable has focus and the balloon is visible.\n    this.editor.keystrokes.set(\"Esc\", (data, cancel) => {\n      if (this._isUIVisible) {\n        this._hideUI();\n        cancel();\n      }\n    });\n\n    // Close on click outside of balloon panel element.\n    clickOutsideHandler({\n      emitter: this.formView,\n      activator: () => this._isUIInPanel,\n      contextElements: [this._balloon.view.element],\n      callback: () => this._hideUI(),\n    });\n  }\n\n  /**\n   * Adds the {@link #actionsView} to the {@link #_balloon}.\n   *\n   * @protected\n   */\n  _addActionsView() {\n    if (this._areActionsInPanel) {\n      return;\n    }\n\n    this._balloon.add({\n      view: this.actionsView,\n      position: this._getBalloonPositionData(),\n    });\n  }\n\n  /**\n   * Adds the {@link #formView} to the {@link #_balloon}.\n   *\n   * @protected\n   */\n  _addFormView() {\n    if (this._isFormInPanel) {\n      return;\n    }\n\n    const editor = this.editor;\n    const addBehaviorTriggerCommand = editor.commands.get(\"addBehaviorTrigger\");\n    const selection = editor.model.document.selection;\n\n    this.formView.disableCssTransitions();\n\n    this._balloon.add({\n      view: this.formView,\n      position: this._getBalloonPositionData(),\n    });\n\n    // Select input when form view is currently visible.\n    if (this._balloon.visibleView === this.formView) {\n      this.formView.idInputView.fieldView.select();\n    }\n\n    this.formView.enableCssTransitions();\n\n    // Make sure that each time the panel shows up, the URL field remains in sync with the value of\n    // the command. If the user typed in the input, then canceled the balloon (`idInputView.fieldView#value` stays\n    // unaltered) and re-opened it without changing the value of the link command (e.g. because they\n    // clicked the same link), they would see the old value instead of the actual value of the command.\n    // https://github.com/ckeditor/ckeditor5-link/issues/78\n    // https://github.com/ckeditor/ckeditor5-link/issues/123\n    this.formView.idInputView.fieldView.element.value =\n      addBehaviorTriggerCommand.value ||\n      this._generateIdFromSelection(selection);\n  }\n\n  /**\n   * Closes the form view. Decides whether the balloon should be hidden completely or if the action view should be shown. This is\n   * decided upon the link command value (which has a value if the document selection is in the link).\n   *\n   * Additionally, if any {@link module:link/link~LinkConfig#decorators} are defined in the editor configuration, the state of\n   * switch buttons responsible for manual decorator handling is restored.\n   *\n   * @private\n   */\n  _closeFormView() {\n    const addBehaviorTriggerCommand =\n      this.editor.commands.get(\"addBehaviorTrigger\");\n\n    // Restore manual decorator states to represent the current model state. This case is important to reset the switch buttons\n    // when the user cancels the editing form.\n    addBehaviorTriggerCommand.restoreManualDecoratorStates();\n\n    if (addBehaviorTriggerCommand.value !== undefined) {\n      this._removeFormView();\n    } else {\n      this._hideUI();\n    }\n  }\n\n  /**\n   * Removes the {@link #formView} from the {@link #_balloon}.\n   *\n   * @protected\n   */\n  _removeFormView() {\n    if (this._isFormInPanel) {\n      // Blur the input element before removing it from DOM to prevent issues in some browsers.\n      // See https://github.com/ckeditor/ckeditor5/issues/1501.\n      this.formView.saveButtonView.focus();\n\n      this._balloon.remove(this.formView);\n\n      // Because the form has an input which has focus, the focus must be brought back\n      // to the editor. Otherwise, it would be lost.\n      this.editor.editing.view.focus();\n\n      this._hideFakeVisualSelection();\n    }\n  }\n\n  /**\n   * Shows the correct UI type. It is either {@link #formView} or {@link #actionsView}.\n   *\n   * @param {Boolean} forceVisible\n   * @private\n   */\n  _showUI(forceVisible = false) {\n    // When there's no link under the selection, go straight to the editing UI.\n    if (!this._getSelectedLinkElement()) {\n      // Show visual selection on a text without a link when the contextual balloon is displayed.\n      // See https://github.com/ckeditor/ckeditor5/issues/4721.\n      this._showFakeVisualSelection();\n\n      this._addActionsView();\n\n      // Be sure panel with link is visible.\n      if (forceVisible) {\n        this._balloon.showStack(\"main\");\n      }\n\n      this._addFormView();\n    }\n    // If there's a link under the selection...\n    else {\n      // Go to the editing UI if actions are already visible.\n      if (this._areActionsVisible) {\n        this._addFormView();\n      }\n      // Otherwise display just the actions UI.\n      else {\n        this._addActionsView();\n      }\n\n      // Be sure panel with link is visible.\n      if (forceVisible) {\n        this._balloon.showStack(\"main\");\n      }\n    }\n\n    // Begin responding to ui#update once the UI is added.\n    this._startUpdatingUI();\n  }\n\n  /**\n   * Removes the {@link #formView} from the {@link #_balloon}.\n   *\n   * See {@link #_addFormView}, {@link #_addActionsView}.\n   *\n   * @protected\n   */\n  _hideUI() {\n    if (!this._isUIInPanel) {\n      return;\n    }\n\n    const editor = this.editor;\n\n    this.stopListening(editor.ui, \"update\");\n    this.stopListening(this._balloon, \"change:visibleView\");\n\n    // Make sure the focus always gets back to the editable _before_ removing the focused form view.\n    // Doing otherwise causes issues in some browsers. See https://github.com/ckeditor/ckeditor5-link/issues/193.\n    editor.editing.view.focus();\n\n    // Remove form first because it's on top of the stack.\n    this._removeFormView();\n\n    // Then remove the actions view because it's beneath the form.\n    this._balloon.remove(this.actionsView);\n\n    this._hideFakeVisualSelection();\n  }\n\n  /**\n   * Makes the UI react to the {@link module:core/editor/editorui~EditorUI#event:update} event to\n   * reposition itself when the editor UI should be refreshed.\n   *\n   * See: {@link #_hideUI} to learn when the UI stops reacting to the `update` event.\n   *\n   * @protected\n   */\n  _startUpdatingUI() {\n    const editor = this.editor;\n    const viewDocument = editor.editing.view.document;\n\n    let prevSelectedLink = this._getSelectedLinkElement();\n    let prevSelectionParent = getSelectionParent();\n\n    const update = () => {\n      const selectedLink = this._getSelectedLinkElement();\n      const selectionParent = getSelectionParent();\n\n      // Hide the panel if:\n      //\n      // * the selection went out of the EXISTING link element. E.g. user moved the caret out\n      //   of the link,\n      // * the selection went to a different parent when creating a NEW link. E.g. someone\n      //   else modified the document.\n      // * the selection has expanded (e.g. displaying link actions then pressing SHIFT+Right arrow).\n      //\n      // Note: #_getSelectedLinkElement will return a link for a non-collapsed selection only\n      // when fully selected.\n      if (\n        (prevSelectedLink && !selectedLink) ||\n        (!prevSelectedLink && selectionParent !== prevSelectionParent)\n      ) {\n        this._hideUI();\n      }\n      // Update the position of the panel when:\n      //  * link panel is in the visible stack\n      //  * the selection remains in the original link element,\n      //  * there was no link element in the first place, i.e. creating a new link\n      else if (this._isUIVisible) {\n        // If still in a link element, simply update the position of the balloon.\n        // If there was no link (e.g. inserting one), the balloon must be moved\n        // to the new position in the editing view (a new native DOM range).\n        this._balloon.updatePosition(this._getBalloonPositionData());\n      }\n\n      prevSelectedLink = selectedLink;\n      prevSelectionParent = selectionParent;\n    };\n\n    function getSelectionParent() {\n      return viewDocument.selection.focus\n        .getAncestors()\n        .reverse()\n        .find((node) => node.is(\"element\"));\n    }\n\n    this.listenTo(editor.ui, \"update\", update);\n    this.listenTo(this._balloon, \"change:visibleView\", update);\n  }\n\n  /**\n   * Returns `true` when {@link #formView} is in the {@link #_balloon}.\n   *\n   * @readonly\n   * @protected\n   * @type {Boolean}\n   */\n  get _isFormInPanel() {\n    return this._balloon.hasView(this.formView);\n  }\n\n  /**\n   * Returns `true` when {@link #actionsView} is in the {@link #_balloon}.\n   *\n   * @readonly\n   * @protected\n   * @type {Boolean}\n   */\n  get _areActionsInPanel() {\n    return this._balloon.hasView(this.actionsView);\n  }\n\n  /**\n   * Returns `true` when {@link #actionsView} is in the {@link #_balloon} and it is\n   * currently visible.\n   *\n   * @readonly\n   * @protected\n   * @type {Boolean}\n   */\n  get _areActionsVisible() {\n    return this._balloon.visibleView === this.actionsView;\n  }\n\n  /**\n   * Returns `true` when {@link #actionsView} or {@link #formView} is in the {@link #_balloon}.\n   *\n   * @readonly\n   * @protected\n   * @type {Boolean}\n   */\n  get _isUIInPanel() {\n    return this._isFormInPanel || this._areActionsInPanel;\n  }\n\n  /**\n   * Returns `true` when {@link #actionsView} or {@link #formView} is in the {@link #_balloon} and it is\n   * currently visible.\n   *\n   * @readonly\n   * @protected\n   * @type {Boolean}\n   */\n  get _isUIVisible() {\n    const visibleView = this._balloon.visibleView;\n\n    return visibleView == this.formView || this._areActionsVisible;\n  }\n\n  /**\n   * Returns positioning options for the {@link #_balloon}. They control the way the balloon is attached\n   * to the target element or selection.\n   *\n   * If the selection is collapsed and inside a link element, the panel will be attached to the\n   * entire link element. Otherwise, it will be attached to the selection.\n   *\n   * @private\n   * @returns {module:utils/dom/position~Options}\n   */\n  _getBalloonPositionData() {\n    const view = this.editor.editing.view;\n    const model = this.editor.model;\n    const viewDocument = view.document;\n    let target = null;\n\n    if (model.markers.has(VISUAL_SELECTION_MARKER_NAME)) {\n      // There are cases when we highlight selection using a marker (#7705, #4721).\n      const markerViewElements = Array.from(\n        this.editor.editing.mapper.markerNameToElements(\n          VISUAL_SELECTION_MARKER_NAME\n        )\n      );\n      const newRange = view.createRange(\n        view.createPositionBefore(markerViewElements[0]),\n        view.createPositionAfter(\n          markerViewElements[markerViewElements.length - 1]\n        )\n      );\n\n      target = view.domConverter.viewRangeToDom(newRange);\n    } else {\n      // Make sure the target is calculated on demand at the last moment because a cached DOM range\n      // (which is very fragile) can desynchronize with the state of the editing view if there was\n      // any rendering done in the meantime. This can happen, for instance, when an inline widget\n      // gets unlinked.\n      target = () => {\n        const targetLink = this._getSelectedLinkElement();\n\n        return targetLink\n          ? // When selection is inside link element, then attach panel to this element.\n            view.domConverter.mapViewToDom(targetLink)\n          : // Otherwise attach panel to the selection.\n            view.domConverter.viewRangeToDom(\n              viewDocument.selection.getFirstRange()\n            );\n      };\n    }\n\n    return { target };\n  }\n\n  /**\n   * Returns the link {@link module:engine/view/attributeelement~AttributeElement} under\n   * the {@link module:engine/view/document~Document editing view's} selection or `null`\n   * if there is none.\n   *\n   * **Note**: For a non–collapsed selection, the link element is returned when **fully**\n   * selected and the **only** element within the selection boundaries, or when\n   * a linked widget is selected.\n   *\n   * @private\n   * @returns {module:engine/view/attributeelement~AttributeElement|null}\n   */\n  _getSelectedLinkElement() {\n    const view = this.editor.editing.view;\n    const selection = view.document.selection;\n    const selectedElement = selection.getSelectedElement();\n\n    // The selection is collapsed or some widget is selected (especially inline widget).\n    if (\n      selection.isCollapsed ||\n      (selectedElement && isWidget(selectedElement))\n    ) {\n      return findLinkElementAncestor(selection.getFirstPosition());\n    } else {\n      // The range for fully selected link is usually anchored in adjacent text nodes.\n      // Trim it to get closer to the actual link element.\n      const range = selection.getFirstRange().getTrimmed();\n      const startLink = findLinkElementAncestor(range.start);\n      const endLink = findLinkElementAncestor(range.end);\n\n      if (!startLink || startLink != endLink) {\n        return null;\n      }\n\n      // Check if the link element is fully selected.\n      if (view.createRangeIn(startLink).getTrimmed().isEqual(range)) {\n        return startLink;\n      } else {\n        return null;\n      }\n    }\n  }\n\n  /**\n   * Displays a fake visual selection when the contextual balloon is displayed.\n   *\n   * This adds a 'link-ui' marker into the document that is rendered as a highlight on selected text fragment.\n   *\n   * @private\n   */\n  _showFakeVisualSelection() {\n    const model = this.editor.model;\n\n    model.change((writer) => {\n      const range = model.document.selection.getFirstRange();\n\n      if (model.markers.has(VISUAL_SELECTION_MARKER_NAME)) {\n        writer.updateMarker(VISUAL_SELECTION_MARKER_NAME, { range });\n      } else {\n        if (range.start.isAtEnd) {\n          const startPosition = range.start.getLastMatchingPosition(\n            ({ item }) => !model.schema.isContent(item),\n            { boundaries: range }\n          );\n\n          writer.addMarker(VISUAL_SELECTION_MARKER_NAME, {\n            usingOperation: false,\n            affectsData: false,\n            range: writer.createRange(startPosition, range.end),\n          });\n        } else {\n          writer.addMarker(VISUAL_SELECTION_MARKER_NAME, {\n            usingOperation: false,\n            affectsData: false,\n            range,\n          });\n        }\n      }\n    });\n  }\n\n  /**\n   * Hides the fake visual selection created in {@link #_showFakeVisualSelection}.\n   *\n   * @private\n   */\n  _hideFakeVisualSelection() {\n    const model = this.editor.model;\n\n    if (model.markers.has(VISUAL_SELECTION_MARKER_NAME)) {\n      model.change((writer) => {\n        writer.removeMarker(VISUAL_SELECTION_MARKER_NAME);\n      });\n    }\n  }\n\n  _generateIdFromSelection(selection) {\n    let id = \"\";\n\n    // Get selection as plain text.\n    for (const range of selection.getRanges()) {\n      for (const item of range.getItems()) {\n        id += viewToPlainText(item);\n      }\n    }\n\n    // Remove special characters.\n    id = id.replace(/[«»!\"#$%&'()*+,/:;<=>?@[\\\\\\]^`{|}~]/g, \"\");\n\n    // Truncate to 10 characters.\n    id = id.substring(0, 20);\n\n    // Strip whitespaces from beginning and end.\n    id = id.trim();\n\n    // Transform to lowercase.\n    id = id.toLowerCase();\n\n    // Replace dots and spaces with a short dash.\n    id = id.replace(/(\\s|\\.)/g, \"-\");\n\n    // Replace multiple dashes with a single dash.\n    id = id.replace(/-{2,}/g, \"-\");\n\n    // Replace long dash with two short dashes.\n    id = id.replace(/—/g, \"--\");\n\n    return id;\n  }\n}\n\n// Returns a link element if there's one among the ancestors of the provided `Position`.\n//\n// @private\n// @param {module:engine/view/position~Position} View position to analyze.\n// @returns {module:engine/view/attributeelement~AttributeElement|null} Link element at the position or null.\nfunction findLinkElementAncestor(position) {\n  return position.getAncestors().find((ancestor) => isLinkElement(ancestor));\n}\n","import { Plugin } from \"@ckeditor/ckeditor5-core\";\nimport BehaviorTriggerEditing from \"./behaviortriggerediting\";\nimport BehaviorTriggerUI from \"./behaviortriggerui\";\n\nexport default class BehaviorTrigger extends Plugin {\n  static get requires() {\n    return [BehaviorTriggerEditing, BehaviorTriggerUI];\n  }\n\n  /**\n   * @inheritDoc\n   */\n  static get pluginName() {\n    return \"BehaviorTrigger\";\n  }\n}\n","import { LinkCommand } from \"@ckeditor/ckeditor5-link\";\nimport { omit } from \"lodash\";\nimport { useModule } from \"@metascore-library/core/services/module-manager\";\n\nexport default class CustomLinkCommand extends LinkCommand {\n  /**\n   * @inheritDoc\n   */\n  constructor(editor) {\n    super(editor);\n\n    /**\n     * The type of link.\n     *\n     * @observable\n     * @readonly\n     * @member #type\n     */\n    this.set(\"type\", null);\n\n    /**\n     * The link parameters.\n     *\n     * @observable\n     * @readonly\n     * @member #params\n     */\n    this.set(\"params\", {});\n\n    this.on(\"change:value\", (evt, name, value) => {\n      this.type = \"url\";\n      this.params = {};\n\n      if (value) {\n        const { getLinkActions } = useModule(\"app_components\");\n        const actions = getLinkActions(value);\n\n        if (actions && actions.length > 0) {\n          const action = actions[0];\n\n          this.params = omit(action, [\"type\"]);\n\n          switch (action.type) {\n            case \"page\":\n              this.type = action.type;\n              this.params.index++;\n              break;\n\n            case \"showBlock\":\n              this.type = \"toggle\";\n              this.params.action = \"show\";\n              break;\n            case \"hideBlock\":\n              this.type = \"toggle\";\n              this.params.action = \"hide\";\n              break;\n            case \"toggleBlock\":\n              this.type = \"toggle\";\n              this.params.action = \"toggle\";\n              break;\n\n            case \"enterFullscreen\":\n              this.type = \"fullscreen\";\n              this.params.action = \"enter\";\n              break;\n            case \"exitFullscreen\":\n              this.type = \"fullscreen\";\n              this.params.action = \"exit\";\n              break;\n            case \"toggleFullscreen\":\n              this.type = \"fullscreen\";\n              this.params.action = \"toggle\";\n              break;\n\n            default:\n              this.type = action.type;\n          }\n        }\n      }\n    });\n  }\n}\n","import { LinkEditing } from \"@ckeditor/ckeditor5-link\";\n\nimport CustomLinkCommand from \"./linkcommand\";\n\nexport default class CustomLinkEditing extends LinkEditing {\n  static get pluginName() {\n    return \"CustomLinkEditing\";\n  }\n\n  /**\n   * @inheritDoc\n   */\n  init() {\n    super.init();\n\n    const editor = this.editor;\n    editor.commands.add(\"link\", new CustomLinkCommand(editor));\n  }\n}\n","import { AutoLink } from \"@ckeditor/ckeditor5-link\";\n\nimport CustomLinkEditing from \"./linkediting\";\n\nexport default class CustomAutoLink extends AutoLink {\n  /**\n   * @inheritDoc\n   */\n  static get requires() {\n    return [\"Delete\", CustomLinkEditing];\n  }\n\n  static get pluginName() {\n    return \"CustomAutoLink\";\n  }\n}\n","import { InputView } from \"@ckeditor/ckeditor5-ui\";\nimport \"timecode-input\";\n\nimport \"../../theme/inputtimecodeview.scss\";\n\n/**\n * The timecode input view class.\n */\nexport default class InputTimecodeView extends InputView {\n  /**\n   * Creates an instance of the input view.\n   *\n   * @param {module:utils/locale~Locale} locale The {@link module:core/editor/editor~Editor#locale} instance.\n   * @param {Object} [options] The options of the input.\n   * @param {Number} [options.min] The value of the `min` DOM attribute (the lowest accepted value).\n   * @param {Number} [options.max] The value of the `max` DOM attribute (the highest accepted value).\n   */\n  constructor(locale, { min, max } = {}) {\n    super(locale);\n\n    const bind = this.bindTemplate;\n\n    /**\n     * The value of the `min` DOM attribute (the lowest accepted value) set on the {@link #element}.\n     *\n     * @observable\n     * @default undefined\n     * @member {Number} #min\n     */\n    this.set(\"min\", min);\n\n    /**\n     * The value of the `max` DOM attribute (the highest accepted value) set on the {@link #element}.\n     *\n     * @observable\n     * @default undefined\n     * @member {Number} #max\n     */\n    this.set(\"max\", max);\n\n    this.inputMode = null;\n\n    // extendTemplate doesn't allow changing the tag.\n    this.template.tag = \"timecode-input\";\n\n    this.extendTemplate({\n      attributes: {\n        class: [\"ck-input-timecode\"],\n        min: bind.to(\"min\"),\n        max: bind.to(\"max\"),\n      },\n    });\n  }\n\n  /**\n   * @inheritdoc\n   */\n  _updateIsEmpty() {\n    this.isEmpty = this.element.value === null;\n  }\n}\n","import { Collection } from \"@ckeditor/ckeditor5-utils\";\nimport { ViewModel } from \"@ckeditor/ckeditor5-ui\";\nimport { useModule } from \"@metascore-library/core/services/module-manager\";\nimport InputTimecodeView from \"./inputtimecodeview\";\n\nexport function createLabeledInputTimecode(\n  labeledFieldView,\n  viewUid,\n  statusUid\n) {\n  const inputView = new InputTimecodeView(labeledFieldView.locale);\n\n  inputView.set({\n    id: viewUid,\n    ariaDescribedById: statusUid,\n  });\n\n  inputView\n    .bind(\"isReadOnly\")\n    .to(labeledFieldView, \"isEnabled\", (value) => !value);\n  inputView\n    .bind(\"hasError\")\n    .to(labeledFieldView, \"errorText\", (value) => !!value);\n\n  inputView.on(\"input\", () => {\n    // UX: Make the error text disappear and disable the error indicator as the user\n    // starts fixing the errors.\n    labeledFieldView.errorText = null;\n  });\n\n  labeledFieldView.bind(\"isEmpty\", \"isFocused\", \"placeholder\").to(inputView);\n\n  return inputView;\n}\n\nexport function getTypeLabels(t) {\n  return {\n    play: t(\"Play\"),\n    pause: t(\"Pause\"),\n    stop: t(\"Stop\"),\n    seek: t(\"Seek\"),\n    page: t(\"Page\"),\n    toggle: t(\"Show/hide a block\"),\n    scenario: t(\"Scenario\"),\n    fullscreen: t(\"Fullscreen\"),\n    url: t(\"URL\"),\n  };\n}\n\nexport function getComponentLabels(type) {\n  const { getComponentsByType } = useModule(\"app_components\");\n\n  const labels = {};\n  getComponentsByType(type).forEach((c) => {\n    labels[c.id] = c.name;\n  });\n  return labels;\n}\n\nexport function getToggleActionLabels(t) {\n  return {\n    show: t(\"Show\"),\n    hide: t(\"Hide\"),\n    toggle: t(\"Toggle\"),\n  };\n}\n\nexport function getFullscreenActionLabels(t) {\n  return {\n    enter: t(\"Enter\"),\n    exit: t(\"Exit\"),\n    toggle: t(\"Toggle\"),\n  };\n}\n\nexport function getDropdownDefinitions(labels) {\n  const itemDefinitions = new Collection();\n\n  Object.entries(labels).forEach(([key, label]) => {\n    const definition = {\n      type: \"button\",\n      model: new ViewModel({\n        _value: key,\n        label: label,\n        withText: true,\n      }),\n    };\n\n    itemDefinitions.add(definition);\n  });\n\n  return itemDefinitions;\n}\n","import { View } from \"@ckeditor/ckeditor5-ui\";\n\nimport \"../../theme/formgroup.scss\";\n\nexport default class FormGroupView extends View {\n  /**\n   * Creates an instance of the form group class.\n   *\n   * @param {module:utils/locale~Locale} locale The locale instance.\n   * @param {Object} options\n   * @param {Array.<module:ui/view~View>} options.children\n   * @param {String} [options.class]\n   * DOM attributes and gets described by the label.\n   */\n  constructor(locale, options = {}) {\n    super(locale);\n\n    const bind = this.bindTemplate;\n\n    /**\n     * Controls whether the groupis visible. Visible by default, groups are hidden\n     * using a CSS class.\n     *\n     * @observable\n     * @default true\n     * @member {Boolean} #isVisible\n     */\n    this.set(\"isVisible\", true);\n\n    /**\n     * An additional CSS class added to the {@link #element}.\n     *\n     * @observable\n     * @member {String} #class\n     */\n    this.set(\"class\", options.class || null);\n\n    /**\n     * A collection of row items (buttons, dropdowns, etc.).\n     *\n     * @readonly\n     * @member {module:ui/viewcollection~ViewCollection}\n     */\n    this.children = this.createCollection();\n\n    if (options.children) {\n      options.children.forEach((child) => this.children.add(child));\n    }\n\n    /**\n     * The role property reflected by the `role` DOM attribute of the {@link #element}.\n     *\n     * **Note**: Used only when a `labelView` is passed to constructor `options`.\n     *\n     * @private\n     * @observable\n     * @member {String} #role\n     */\n    this.set(\"_role\", null);\n\n    this.setTemplate({\n      tag: \"div\",\n      attributes: {\n        class: [\n          \"ck\",\n          \"ck-form__group\",\n          bind.to(\"class\"),\n          bind.if(\"isVisible\", \"ck-hidden\", (value) => !value),\n        ],\n        role: bind.to(\"_role\"),\n        \"z-index\": \"-1\",\n      },\n      children: this.children,\n    });\n  }\n}\n","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 20 20\\\">\\n  <path fill=\\\"currentColor\\\" d=\\\"M11.414 10l4.293-4.293a.999.999 0 1 0-1.414-1.414L10 8.586 5.707 4.293a.999.999 0 1 0-1.414 1.414L8.586 10l-4.293 4.293a.999.999 0 1 0 1.414 1.414L10 11.414l4.293 4.293a.997.997 0 0 0 1.414 0 .999.999 0 0 0 0-1.414L11.414 10z\\\"/>\\n</svg>\\n\";","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 20 20\\\">\\n  <path fill=\\\"currentColor\\\" d=\\\"M9.293 13.707l-3-3a.999.999 0 1 1 1.414-1.414L9 10.586V3a1 1 0 1 1 2 0v7.586l1.293-1.293a.999.999 0 1 1 1.414 1.414l-3 3a.999.999 0 0 1-1.414 0zM17 16a1 1 0 1 1 0 2H3a1 1 0 1 1 0-2h14z\\\"/>\\n</svg>\\n\";","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 20 20\\\">\\n  <path fill=\\\"currentColor\\\" d=\\\"M13.707 6.707a.997.997 0 0 1-1.414 0L11 5.414V13a1 1 0 1 1-2 0V5.414L7.707 6.707a.999.999 0 1 1-1.414-1.414l3-3a.999.999 0 0 1 1.414 0l3 3a.999.999 0 0 1 0 1.414zM17 18H3a1 1 0 1 1 0-2h14a1 1 0 1 1 0 2z\\\"/>\\n</svg>\\n\";","import {\n  LabeledFieldView,\n  ButtonView,\n  ToolbarView,\n} from \"@ckeditor/ckeditor5-ui\";\nimport { useModule } from \"@metascore-library/core/services/module-manager\";\nimport { unref } from \"vue\";\nimport { createLabeledInputTimecode } from \"./utils\";\n\nimport clearIcon from \"../../theme/icons/clear.svg\";\nimport inIcon from \"../../theme/icons/in.svg\";\nimport outIcon from \"../../theme/icons/out.svg\";\n\nimport \"../../theme/labeledtimecodefield.scss\";\n\n/**\n * The labeled timecode field view class.\n */\nexport default class LabeledTimecodeFieldView extends LabeledFieldView {\n  /**\n   * Creates an instance of the labeled field view.\n   *\n   * @param {module:utils/locale~Locale} locale The {@link module:core/editor/editor~Editor#locale} instance.\n   * @param {Object} [options] The options of the input.\n   * @param {Boolean} [options.in_button=true] Whether to add the 'in' button.\n   * @param {Boolean} [options.out_button=true] Whether to add the 'out' button.\n   * @param {Boolean} [options.clear_button=true] Whether to add the 'clear' button.\n   */\n  constructor(\n    locale,\n    { in_button = true, out_button = true, clear_button = true } = {}\n  ) {\n    super(locale, createLabeledInputTimecode);\n\n    const t = locale.t;\n    const { time: mediaTime, seekTo: seekMediaTo } = useModule(\"media_player\");\n\n    this.toolbarView = null;\n\n    const buttons = [];\n\n    if (in_button) {\n      this.inButton = new ButtonView(locale);\n      this.inButton.set({\n        icon: inIcon,\n        tooltip: t(\"Set value to current media time\"),\n      });\n      this.inButton.on(\"execute\", () => {\n        this.fieldView.value = unref(mediaTime);\n        this.fieldView.fire(\"input\");\n      });\n      buttons.push(this.inButton);\n    }\n\n    if (out_button) {\n      this.outButton = new ButtonView(locale);\n      this.outButton.set({\n        icon: outIcon,\n        tooltip: t(\"Set current media time to this value\"),\n      });\n      this.outButton.on(\"execute\", () => {\n        seekMediaTo(this.fieldView.value);\n      });\n      buttons.push(this.outButton);\n    }\n\n    if (clear_button) {\n      this.clearButton = new ButtonView(locale);\n      this.clearButton.set({\n        icon: clearIcon,\n        tooltip: t(\"Clear value\"),\n      });\n      this.clearButton.on(\"execute\", () => {\n        this.fieldView.value = null;\n        this.fieldView.fire(\"input\");\n      });\n      buttons.push(this.clearButton);\n    }\n\n    if (buttons.length > 0) {\n      this.toolbarView = new ToolbarView(locale);\n      this.toolbarView.items.addMany(buttons);\n      this.fieldWrapperChildren.add(this.toolbarView);\n    }\n\n    this.extendTemplate({\n      attributes: {\n        class: [\"ck-labeled-field-view_timecode\"],\n      },\n    });\n  }\n\n  /**\n   * @inheritdoc\n   */\n  render() {\n    super.render();\n\n    if (this.toolbarView) {\n      this.fieldView.focusTracker.add(this.toolbarView.element);\n    }\n  }\n}\n","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 20 20\\\" xml:space=\\\"preserve\\\">\\n  <path fill=\\\"currentColor\\\" d=\\\"M10 .4C4.697.4.399 4.698.399 10A9.6 9.6 0 0 0 10 19.601c5.301 0 9.6-4.298 9.6-9.601 0-5.302-4.299-9.6-9.6-9.6zm.896 3.466c.936 0 1.211.543 1.211 1.164 0 .775-.62 1.492-1.679 1.492-.886 0-1.308-.445-1.282-1.182 0-.621.519-1.474 1.75-1.474zM8.498 15.75c-.64 0-1.107-.389-.66-2.094l.733-3.025c.127-.484.148-.678 0-.678-.191 0-1.022.334-1.512.664l-.319-.523c1.555-1.299 3.343-2.061 4.108-2.061.64 0 .746.756.427 1.92l-.84 3.18c-.149.562-.085.756.064.756.192 0 .82-.232 1.438-.719l.362.486c-1.513 1.512-3.162 2.094-3.801 2.094z\\\"/>\\n</svg>\";","import LinkFormView from \"@ckeditor/ckeditor5-link/src/ui/linkformview\";\nimport {\n  LabeledFieldView,\n  createLabeledDropdown,\n  createLabeledInputNumber,\n  addListToDropdown,\n  SwitchButtonView,\n  ButtonView,\n} from \"@ckeditor/ckeditor5-ui\";\nimport {\n  getTypeLabels,\n  getComponentLabels,\n  getToggleActionLabels,\n  getFullscreenActionLabels,\n  getDropdownDefinitions,\n} from \"./utils\";\nimport FormGroupView from \"./formgroupview\";\nimport LabeledTimecodeFieldView from \"./labeledtimecodefieldview\";\n\nimport tipIcon from \"../../theme/icons/tip.svg\";\n\nimport \"../../theme/linkform.scss\";\n\nexport default class CustomLinkFormView extends LinkFormView {\n  /**\n   * @inheritDoc\n   */\n  constructor(locale, linkCommand) {\n    super(locale, linkCommand);\n\n    const t = this.locale.t;\n\n    /**\n     * The link type\n     *\n     * @observable\n     * @member {String} #type\n     */\n    this.set(\"type\", null);\n\n    /**\n     * A collection of link parameters.\n     *\n     * @protected\n     * @observable\n     * @member {Object} #params\n     */\n    this.set(\"params\", {});\n\n    this.on(\"change:type\", (evt, name, value) => {\n      this.urlInputView.fieldView.value = \"\";\n\n      // Set action defaults.\n      switch (value) {\n        case \"seek\":\n          this.params = {\n            time: 0,\n          };\n          break;\n\n        case \"toggle\":\n          this.params = {\n            action: \"show\",\n          };\n          break;\n\n        case \"fullscreen\":\n          this.params = {\n            action: \"enter\",\n          };\n          break;\n\n        default:\n          this.params = {};\n      }\n    });\n\n    this.on(\"change:params\", () => {\n      this.updateValue();\n    });\n\n    // Add a placeholder to the URL field\n    this.urlInputView.fieldView.placeholder = t(\"https://example.com\");\n  }\n\n  /**\n   * @inheritDoc\n   */\n  render() {\n    super.render();\n\n    const extraChildViews = [\n      this.typeInputView,\n      this._playInputsGroup,\n      this._seekInputsGroup,\n      this._pageInputsGroup,\n      this._blockToggleInputsGroup,\n      this._scenarioInputsGroup,\n      this._fullscreenInputsGroup,\n    ];\n\n    this._focusables.addMany(extraChildViews, 0);\n\n    extraChildViews.forEach((v) => {\n      // Register the view in the focus tracker.\n      this.focusTracker.add(v.element);\n    });\n  }\n\n  /**\n   * Creates a labeled \"type\" input.\n   *\n   * @private\n   * @returns {LabeledFieldView} Labeled field view instance.\n   */\n  _createTypeInput() {\n    const t = this.locale.t;\n\n    const typeLabels = getTypeLabels(this.t);\n    const dropdown = new LabeledFieldView(this.locale, createLabeledDropdown);\n    dropdown.set({\n      label: t(\"Type\"),\n    });\n    dropdown.fieldView.buttonView.set({\n      isOn: false,\n      withText: true,\n    });\n    dropdown.fieldView.buttonView.bind(\"label\").to(this, \"type\", (value) => {\n      return typeLabels[value];\n    });\n    dropdown.fieldView.on(\"execute\", (evt) => {\n      this.type = evt.source._value;\n    });\n    dropdown.bind(\"isEmpty\").to(this, \"type\", (value) => !value);\n\n    const dropdownDefinitions = getDropdownDefinitions(typeLabels);\n    dropdownDefinitions.map((definition) => {\n      definition.model.bind(\"isOn\").to(this, \"type\", (value) => {\n        return value === definition.model._value;\n      });\n    });\n    addListToDropdown(dropdown.fieldView, dropdownDefinitions);\n\n    return dropdown;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  _createUrlInput() {\n    const labeledInput = super._createUrlInput();\n\n    // Hide the input when the type is not \"url\".\n    const bind = this.bindTemplate;\n    labeledInput.extendTemplate({\n      attributes: {\n        // ck-hidden seems to cause focus/selection issues.\n        // see https://github.com/philharmoniedeparis/metascore-library/issues/704\n        class: bind.if(\"type\", \"ck-fake-hidden\", (value) => value !== \"url\"),\n      },\n    });\n\n    return labeledInput;\n  }\n\n  /**\n   * Creates a group of inputs for \"play\" links.\n   *\n   * @private\n   * @returns {FormGroupView} Form group view instance.\n   */\n  _createPlayInputs() {\n    const locale = this.locale;\n    const t = locale.t;\n    const bind = this.bindTemplate;\n\n    // Excerpt.\n    this.playExcerptInputView = new SwitchButtonView(locale);\n    this.playExcerptInputView.set({\n      label: t(\"Excerpt\"),\n      withText: true,\n    });\n    this.playExcerptInputView\n      .bind(\"isOn\")\n      .to(this, \"params\", (params) => !!params?.excerpt);\n    this.playExcerptInputView.on(\"execute\", () => {\n      this.params = {\n        ...this.params,\n        excerpt: !this.params?.excerpt,\n      };\n    });\n\n    // Start time.\n    this.playStartInputView = new LabeledTimecodeFieldView(locale);\n    this.playStartInputView.set({\n      label: t(\"Start time\"),\n    });\n    this.playStartInputView.fieldView\n      .bind(\"value\")\n      .to(this, \"params\", (params) => params?.start);\n    this.playStartInputView.fieldView.on(\"input\", () => {\n      this.params = {\n        ...this.params,\n        start: this.playStartInputView.fieldView.element.value,\n      };\n    });\n    this.playStartInputView.extendTemplate({\n      attributes: {\n        class: bind.if(\"params\", \"ck-hidden\", (value) => !value?.excerpt),\n      },\n    });\n\n    // End time.\n    this.playEndInputView = new LabeledTimecodeFieldView(locale);\n    this.playEndInputView.set({\n      label: t(\"End time\"),\n    });\n    this.playEndInputView.fieldView\n      .bind(\"value\")\n      .to(this, \"params\", (params) => params?.end);\n    this.playEndInputView.fieldView.on(\"input\", () => {\n      this.params = {\n        ...this.params,\n        end: this.playEndInputView.fieldView.element.value,\n      };\n    });\n    this.playEndInputView.extendTemplate({\n      attributes: {\n        class: bind.if(\"params\", \"ck-hidden\", (value) => !value?.excerpt),\n      },\n    });\n\n    // Scenario.\n    const scenarioLabels = getComponentLabels(\"Scenario\");\n    this.playScenarioInputView = new LabeledFieldView(\n      locale,\n      createLabeledDropdown\n    );\n    this.playScenarioInputView.set({\n      label: t(\"Scenario\"),\n    });\n    this.playScenarioInputView.fieldView.buttonView.set({\n      isOn: false,\n      withText: true,\n    });\n    this.playScenarioInputView.fieldView.buttonView\n      .bind(\"label\")\n      .to(this, \"params\", (params) => scenarioLabels[params?.scenario]);\n    this.playScenarioInputView.fieldView.on(\"execute\", (evt) => {\n      this.params = {\n        ...this.params,\n        scenario: evt.source._value,\n      };\n    });\n    this.playScenarioInputView\n      .bind(\"isEmpty\")\n      .to(this, \"params\", (params) => !params?.scenario);\n    this.playScenarioInputView.extendTemplate({\n      attributes: {\n        class: bind.if(\"params\", \"ck-hidden\", (value) => !value?.excerpt),\n      },\n    });\n\n    const dropdownDefinitions = getDropdownDefinitions(scenarioLabels);\n    dropdownDefinitions.map((definition) => {\n      definition.model.bind(\"isOn\").to(this, \"params\", (value) => {\n        return value?.scenario === definition.model._value;\n      });\n    });\n    addListToDropdown(\n      this.playScenarioInputView.fieldView,\n      dropdownDefinitions\n    );\n\n    // Auto-highlight.\n    this.playHighlightInputView = new SwitchButtonView(locale);\n    this.playHighlightInputView.set({\n      label: t(\"Auto-highlight\"),\n      withText: true,\n      tooltip: t(\n        \"Highlight the link when the current media time is between its time limits\"\n      ),\n    });\n    this.playHighlightInputView\n      .bind(\"isOn\")\n      .to(this, \"params\", (params) => !!params?.highlight);\n    this.playHighlightInputView.on(\"execute\", () => {\n      this.params = {\n        ...this.params,\n        highlight: !this.params?.highlight,\n      };\n    });\n    this.playHighlightInputView.extendTemplate({\n      attributes: {\n        class: bind.if(\"params\", \"ck-hidden\", (value) => !value?.excerpt),\n      },\n    });\n\n    const inputs = new FormGroupView(locale, {\n      children: [\n        this.playExcerptInputView,\n        this.playStartInputView,\n        this.playEndInputView,\n        this.playScenarioInputView,\n        this.playHighlightInputView,\n      ],\n    });\n    inputs.bind(\"isVisible\").to(this, \"type\", (value) => value === \"play\");\n\n    return inputs;\n  }\n\n  /**\n   * Creates a group of inputs for \"seek\" links.\n   *\n   * @private\n   * @returns {FormGroupView} Form group view instance.\n   */\n  _createSeekInputs() {\n    const locale = this.locale;\n    const t = locale.t;\n\n    // Time.\n    this.seekTimeInputView = new LabeledTimecodeFieldView(locale, {\n      clear_button: false,\n    });\n    this.seekTimeInputView.set({\n      label: t(\"Time\"),\n    });\n    this.seekTimeInputView.fieldView\n      .bind(\"value\")\n      .to(this, \"params\", (params) => params?.time);\n    this.seekTimeInputView.fieldView.on(\"input\", () => {\n      this.params = {\n        ...this.params,\n        time: this.seekTimeInputView.fieldView.element.value,\n      };\n    });\n\n    const inputs = new FormGroupView(locale, {\n      children: [this.seekTimeInputView],\n    });\n    inputs.bind(\"isVisible\").to(this, \"type\", (value) => value === \"seek\");\n\n    return inputs;\n  }\n\n  /**\n   * Creates a group of inputs for \"page\" links.\n   *\n   * @private\n   * @returns {FormGroupView} Form group view instance.\n   */\n  _createPageInputs() {\n    const locale = this.locale;\n    const t = locale.t;\n\n    // Block.\n    const blockLabels = Object.fromEntries(\n      Object.values(getComponentLabels(\"Block\")).map((val) => [val, val])\n    );\n    this.pageBlockInputView = new LabeledFieldView(\n      locale,\n      createLabeledDropdown\n    );\n    this.pageBlockInputView.set({\n      label: t(\"Block\"),\n    });\n    this.pageBlockInputView.fieldView.buttonView.set({\n      isOn: false,\n      withText: true,\n    });\n    this.pageBlockInputView.fieldView.buttonView\n      .bind(\"label\")\n      .to(this, \"params\", (params) => params?.block);\n    this.pageBlockInputView.fieldView.on(\"execute\", (evt) => {\n      this.params = {\n        ...this.params,\n        block: evt.source._value,\n      };\n    });\n    this.pageBlockInputView\n      .bind(\"isEmpty\")\n      .to(this, \"params\", (params) => !params?.block);\n\n    const dropdownDefinitions = getDropdownDefinitions(blockLabels);\n    dropdownDefinitions.map((definition) => {\n      definition.model.bind(\"isOn\").to(this, \"params\", (value) => {\n        return value?.block === definition.model._value;\n      });\n    });\n    addListToDropdown(this.pageBlockInputView.fieldView, dropdownDefinitions);\n\n    // Index.\n    this.pageIndexInputView = new LabeledFieldView(\n      locale,\n      createLabeledInputNumber\n    );\n    this.pageIndexInputView.set({\n      label: t(\"Page\"),\n    });\n    this.pageIndexInputView.fieldView.set({\n      min: 1,\n      step: 1,\n    });\n    this.pageIndexInputView.fieldView\n      .bind(\"value\")\n      .to(this, \"params\", (params) => params?.index);\n    this.pageIndexInputView.fieldView.on(\"input\", () => {\n      this.params = {\n        ...this.params,\n        index: parseInt(this.pageIndexInputView.fieldView.element.value),\n      };\n    });\n\n    const inputs = new FormGroupView(locale, {\n      children: [this.pageBlockInputView, this.pageIndexInputView],\n    });\n    inputs.bind(\"isVisible\").to(this, \"type\", (value) => value === \"page\");\n\n    return inputs;\n  }\n\n  /**\n   * Creates a group of inputs for \"(show|hide|toggle)Block\" links.\n   *\n   * @private\n   * @returns {FormGroupView} Form group view instance.\n   */\n  _createBlockToggleInputs() {\n    const locale = this.locale;\n    const t = locale.t;\n\n    // Block.\n    const blockLabels = Object.fromEntries(\n      Object.values(getComponentLabels(\"Block\")).map((val) => [val, val])\n    );\n    this.toggleBlockInputView = new LabeledFieldView(\n      locale,\n      createLabeledDropdown\n    );\n    this.toggleBlockInputView.set({\n      label: t(\"Block\"),\n    });\n    this.toggleBlockInputView.fieldView.buttonView.set({\n      isOn: false,\n      withText: true,\n    });\n    this.toggleBlockInputView.fieldView.buttonView\n      .bind(\"label\")\n      .to(this, \"params\", (params) => params?.name);\n    this.toggleBlockInputView.fieldView.on(\"execute\", (evt) => {\n      this.params = {\n        ...this.params,\n        name: evt.source._value,\n      };\n    });\n    this.toggleBlockInputView\n      .bind(\"isEmpty\")\n      .to(this, \"params\", (params) => !params?.name);\n    const nameDropdownDefinitions = getDropdownDefinitions(blockLabels);\n    nameDropdownDefinitions.map((definition) => {\n      definition.model.bind(\"isOn\").to(this, \"params\", (value) => {\n        return value?.name === definition.model._value;\n      });\n    });\n    addListToDropdown(\n      this.toggleBlockInputView.fieldView,\n      nameDropdownDefinitions\n    );\n\n    // Action.\n    const actionLabels = getToggleActionLabels(t);\n    this.toggleActionInputView = new LabeledFieldView(\n      locale,\n      createLabeledDropdown\n    );\n    this.toggleActionInputView.set({\n      label: t(\"Action\"),\n    });\n    this.toggleActionInputView.fieldView.buttonView.set({\n      isOn: false,\n      withText: true,\n    });\n    this.toggleActionInputView.fieldView.buttonView\n      .bind(\"label\")\n      .to(this, \"params\", (params) => actionLabels[params?.action]);\n    this.toggleActionInputView.fieldView.on(\"execute\", (evt) => {\n      this.params = {\n        ...this.params,\n        action: evt.source._value,\n      };\n    });\n    this.toggleActionInputView\n      .bind(\"isEmpty\")\n      .to(this, \"params\", (params) => !params?.action);\n    const actionDropdownDefinitions = getDropdownDefinitions(actionLabels);\n    actionDropdownDefinitions.map((definition) => {\n      definition.model.bind(\"isOn\").to(this, \"params\", (value) => {\n        return value?.action === definition.model._value;\n      });\n    });\n    addListToDropdown(\n      this.toggleActionInputView.fieldView,\n      actionDropdownDefinitions\n    );\n\n    const inputs = new FormGroupView(locale, {\n      children: [this.toggleBlockInputView, this.toggleActionInputView],\n    });\n    inputs.bind(\"isVisible\").to(this, \"type\", (value) => value === \"toggle\");\n\n    return inputs;\n  }\n\n  /**\n   * Creates a group of inputs for \"scenario\" links.\n   *\n   * @private\n   * @returns {FormGroupView} Form group view instance.\n   */\n  _createScenarioInputs() {\n    const locale = this.locale;\n    const t = locale.t;\n\n    // Scenario.\n    const scenarioLabels = getComponentLabels(\"Scenario\");\n    this.scenarioScenarioInputView = new LabeledFieldView(\n      locale,\n      createLabeledDropdown\n    );\n    this.scenarioScenarioInputView.set({\n      label: t(\"Scenario\"),\n    });\n    this.scenarioScenarioInputView.fieldView.buttonView.set({\n      isOn: false,\n      withText: true,\n    });\n    this.scenarioScenarioInputView.fieldView.buttonView\n      .bind(\"label\")\n      .to(this, \"params\", (params) => {\n        return scenarioLabels[params?.id];\n      });\n    this.scenarioScenarioInputView.fieldView.on(\"execute\", (evt) => {\n      this.params = {\n        ...this.params,\n        id: evt.source._value,\n      };\n    });\n    this.scenarioScenarioInputView\n      .bind(\"isEmpty\")\n      .to(this, \"params\", (params) => !params?.id);\n    const idDropdownDefinitions = getDropdownDefinitions(scenarioLabels);\n    idDropdownDefinitions.map((definition) => {\n      definition.model.bind(\"isOn\").to(this, \"params\", (value) => {\n        return value?.id === definition.model._value;\n      });\n    });\n    addListToDropdown(\n      this.scenarioScenarioInputView.fieldView,\n      idDropdownDefinitions\n    );\n\n    const inputs = new FormGroupView(locale, {\n      children: [this.scenarioScenarioInputView],\n    });\n    inputs.bind(\"isVisible\").to(this, \"type\", (value) => value === \"scenario\");\n\n    return inputs;\n  }\n\n  /**\n   * Creates a group of inputs for \"(enter|exit|toggle)Fullscreen\" links.\n   *\n   * @private\n   * @returns {FormGroupView} Form group view instance.\n   */\n  _createFullscreenInputs() {\n    const locale = this.locale;\n    const t = locale.t;\n\n    // Action.\n    const actionLabels = getFullscreenActionLabels(t);\n    this.fullscreenActionInputView = new LabeledFieldView(\n      locale,\n      createLabeledDropdown\n    );\n    this.fullscreenActionInputView.set({\n      label: t(\"Action\"),\n    });\n    this.fullscreenActionInputView.fieldView.buttonView.set({\n      isOn: false,\n      withText: true,\n    });\n    this.fullscreenActionInputView.fieldView.buttonView\n      .bind(\"label\")\n      .to(this, \"params\", (params) => actionLabels[params?.action]);\n    this.fullscreenActionInputView.fieldView.on(\"execute\", (evt) => {\n      this.params = {\n        ...this.params,\n        action: evt.source._value,\n      };\n    });\n    this.fullscreenActionInputView\n      .bind(\"isEmpty\")\n      .to(this, \"params\", (params) => !params?.action);\n    const actionDropdownDefinitions = getDropdownDefinitions(actionLabels);\n    actionDropdownDefinitions.map((definition) => {\n      definition.model.bind(\"isOn\").to(this, \"params\", (value) => {\n        return value?.action === definition.model._value;\n      });\n    });\n    addListToDropdown(\n      this.fullscreenActionInputView.fieldView,\n      actionDropdownDefinitions\n    );\n\n    const inputs = new FormGroupView(locale, {\n      children: [this.fullscreenActionInputView],\n    });\n    inputs\n      .bind(\"isVisible\")\n      .to(this, \"type\", (value) => value === \"fullscreen\");\n\n    return inputs;\n  }\n\n  /**\n   * Creates the tip icon view.\n   *\n   * @private\n   * @returns {IconView}\n   */\n  _createTipView() {\n    const locale = this.locale;\n    const t = locale.t;\n    const view = new ButtonView(locale);\n\n    view.set({\n      icon: tipIcon,\n      withText: false,\n      tooltip: t(\n        'TIP: Use the \"behaviors\" to program all the actions\\nyou want when clicking on a text or an image!'\n      ),\n    });\n\n    view.extendTemplate({\n      attributes: {\n        class: \"ck-link__tip\",\n      },\n    });\n\n    return view;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  _createFormChildren(manualDecorators) {\n    const children = super._createFormChildren(manualDecorators);\n\n    this.typeInputView = this._createTypeInput();\n    this._playInputsGroup = this._createPlayInputs();\n    this._seekInputsGroup = this._createSeekInputs();\n    this._pageInputsGroup = this._createPageInputs();\n    this._blockToggleInputsGroup = this._createBlockToggleInputs();\n    this._scenarioInputsGroup = this._createScenarioInputs();\n    this._fullscreenInputsGroup = this._createFullscreenInputs();\n    this._tipView = this._createTipView();\n\n    children.addMany(\n      [\n        this.typeInputView,\n        this._playInputsGroup,\n        this._seekInputsGroup,\n        this._pageInputsGroup,\n        this._blockToggleInputsGroup,\n        this._scenarioInputsGroup,\n        this._fullscreenInputsGroup,\n      ],\n      0\n    );\n\n    children.add(this._tipView);\n\n    return children;\n  }\n\n  /**\n   * Update the URL input value.\n   */\n  updateValue() {\n    if (this.type === \"url\") return;\n\n    const type = this.type;\n    const params = this.params;\n\n    let value = \"\";\n\n    switch (type) {\n      case \"play\":\n        value = `#${type}`;\n        if (params?.excerpt) {\n          value += `=${params.start ?? \"\"}`;\n          value += `,${params.end ?? \"\"}`;\n          value += `,${params.scenario ?? \"\"}`;\n\n          if (params?.highlight) {\n            value += \",1\";\n          }\n        }\n        break;\n\n      case \"seek\":\n        value = `#${type}=${params.time}`;\n        break;\n\n      case \"page\":\n        value = `#${type}=${params.block},${params.index}`;\n        break;\n\n      case \"toggle\":\n        value = `#${params.action}Block=${params.name}`;\n        break;\n\n      case \"scenario\":\n        value = `#scenario=${params.id}`;\n        break;\n\n      case \"fullscreen\":\n        value = `#${params.action}Fullscreen`;\n        break;\n\n      default:\n        value = type ? `#${type}` : \"\";\n    }\n\n    this.urlInputView.fieldView.value = value;\n\n    this.fire(\"update\");\n  }\n}\n\n/**\n * Fired when the form view's value is updated.\n *\n * @event update\n */\n","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" xml:space=\\\"preserve\\\" viewBox=\\\"0 0 22 22\\\">\\n  <path d=\\\"M12.069 13.455c.308.307.338.781.063 1.055l-4.555 4.553c-.271.271-.747.244-1.053-.064l-3.526-3.523c-.306-.309-.334-.781-.063-1.055L7.49 9.867c.272-.272.747-.243 1.053.063.307.306.337.781.064 1.053l-3.564 3.565c-.272.271-.245.746.063 1.053l1.29 1.291c.308.307.782.334 1.055.064l3.563-3.564c.274-.273.748-.246 1.055.063M19 6.526c.307.306.336.78.063 1.053l-4.554 4.554c-.27.271-.747.244-1.054-.063-.307-.308-.336-.782-.065-1.055l3.565-3.563c.273-.272.243-.747-.063-1.053l-1.29-1.291c-.307-.308-.78-.337-1.053-.064l-3.566 3.563c-.271.273-.746.244-1.053-.063-.307-.306-.335-.781-.064-1.052l4.555-4.555c.271-.272.747-.243 1.053.063L19 6.526z\\\"/>\\n  <path d=\\\"M14.217 7.783c.31.308.338.78.063 1.053l-5.446 5.445c-.27.271-.745.242-1.053-.064-.306-.305-.335-.781-.063-1.053l5.446-5.444c.272-.274.747-.245 1.053.063\\\"/>\\n</svg>\\n\";","import { LinkUI } from \"@ckeditor/ckeditor5-link\";\nimport { ButtonView } from \"@ckeditor/ckeditor5-ui\";\nimport {\n  addLinkProtocolIfApplicable,\n  LINK_KEYSTROKE,\n} from \"@ckeditor/ckeditor5-link/src/utils\";\nimport { CssTransitionDisablerMixin } from \"@ckeditor/ckeditor5-ui\";\nimport CustomLinkFormView from \"./ui/linkformview\";\n\nimport linkIcon from \"../theme/icons/link.svg\";\n\nexport default class CustomLinkUI extends LinkUI {\n  static get pluginName() {\n    return \"CustomLinkUI\";\n  }\n\n  /**\n   * @inheritDoc\n   */\n  _createFormView() {\n    const editor = this.editor;\n    const linkCommand = editor.commands.get(\"link\");\n    const defaultProtocol = editor.config.get(\"link.defaultProtocol\");\n    const allowCreatingEmptyLinks = editor.config.get(\n      \"link.allowCreatingEmptyLinks\"\n    );\n\n    const formView = new (CssTransitionDisablerMixin(CustomLinkFormView))(\n      editor.locale,\n      linkCommand\n    );\n\n    formView.urlInputView.fieldView.bind(\"value\").to(linkCommand, \"value\");\n\n    // Form elements should be read-only when corresponding commands are disabled.\n    formView.typeInputView.bind(\"isEnabled\").to(linkCommand, \"isEnabled\");\n    formView.urlInputView.bind(\"isEnabled\").to(linkCommand, \"isEnabled\");\n\n    // Disable the \"save\" button if the command is disabled or the input is empty despite being required.\n    formView.saveButtonView\n      .bind(\"isEnabled\")\n      .to(\n        linkCommand,\n        \"isEnabled\",\n        formView.urlInputView,\n        \"isEmpty\",\n        (isCommandEnabled, isInputEmpty) =>\n          isCommandEnabled && (allowCreatingEmptyLinks || !isInputEmpty)\n      );\n\n    // Execute link command after clicking the \"Save\" button.\n    this.listenTo(formView, \"submit\", () => {\n      const { value } = formView.urlInputView.fieldView.element;\n      const parsedUrl = addLinkProtocolIfApplicable(value, defaultProtocol);\n      editor.execute(\"link\", parsedUrl, formView.getDecoratorSwitchesState());\n      this._closeFormView();\n    });\n\n    // Hide the panel after clicking the \"Cancel\" button.\n    this.listenTo(formView, \"cancel\", () => {\n      this._closeFormView();\n    });\n\n    // Close the panel on esc key press when the **form has focus**.\n    formView.keystrokes.set(\"Esc\", (data, cancel) => {\n      this._closeFormView();\n      cancel();\n    });\n\n    // Update the balloon's position when the form updates.\n    formView.on(\"update\", () => {\n      if (this._isUIVisible) {\n        this._balloon.updatePosition();\n      }\n    });\n\n    return formView;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  _createToolbarLinkButton() {\n    const editor = this.editor;\n    const linkCommand = editor.commands.get(\"link\");\n    const t = editor.t;\n\n    editor.ui.componentFactory.add(\"link\", (locale) => {\n      const button = new ButtonView(locale);\n\n      button.isEnabled = true;\n      button.label = t(\"Link\");\n      button.icon = linkIcon;\n      button.keystroke = LINK_KEYSTROKE;\n      button.tooltip = true;\n      button.withText = true;\n      button.isToggleable = true;\n\n      // Bind button to the command.\n      button.bind(\"isEnabled\").to(linkCommand, \"isEnabled\");\n      button.bind(\"isOn\").to(linkCommand, \"value\", (value) => !!value);\n\n      // Show the panel on button click.\n      this.listenTo(button, \"execute\", () => this._showUI(true));\n\n      return button;\n    });\n  }\n\n  _addFormView() {\n    super._addFormView();\n\n    const editor = this.editor;\n    const linkCommand = editor.commands.get(\"link\");\n\n    // Make sure that each time the panel shows up, all fields remain in sync\n    // with the values of the command.\n    this.formView.unbind(\"type\", \"params\");\n    this.formView.bind(\"type\", \"params\").to(linkCommand);\n    this.formView.updateValue();\n\n    // Select input when form view is currently visible.\n    if (this._balloon.visibleView === this.formView) {\n      this.formView.focus();\n    }\n  }\n}\n","import { Link } from \"@ckeditor/ckeditor5-link\";\n\nimport CustomAutoLink from \"./autolink\";\nimport CustomLinkEditing from \"./linkediting\";\nimport CustomLinkUI from \"./linkui\";\n\nexport default class CustomLink extends Link {\n  /**\n   * @inheritDoc\n   */\n  static get requires() {\n    return [CustomLinkEditing, CustomLinkUI, CustomAutoLink];\n  }\n\n  static get pluginName() {\n    return \"CustomLink\";\n  }\n}\n","import { LinkImageEditing } from \"@ckeditor/ckeditor5-link\";\n\nimport CustomLinkEditing from \"./linkediting\";\n\nexport default class CustomLinkImageEditing extends LinkImageEditing {\n  /**\n   * @inheritDoc\n   */\n  static get requires() {\n    return [\"ImageEditing\", \"ImageUtils\", CustomLinkEditing];\n  }\n\n  static get pluginName() {\n    return \"CustomLinkImageEditing\";\n  }\n}\n","import { LinkImageUI } from \"@ckeditor/ckeditor5-link\";\n\nimport CustomLinkEditing from \"./linkediting\";\nimport CustomLinkUI from \"./linkui\";\n\nexport default class CustomLinkImageUI extends LinkImageUI {\n  /**\n   * @inheritDoc\n   */\n  static get requires() {\n    return [CustomLinkEditing, CustomLinkUI, \"ImageBlockEditing\"];\n  }\n\n  static get pluginName() {\n    return \"CustomLinkImageUI\";\n  }\n}\n","import { LinkImage } from \"@ckeditor/ckeditor5-link\";\n\nimport CustomLinkImageEditing from \"./linkimageediting\";\nimport CustomLinkImageUI from \"./linkimageui\";\n\nexport default class CustomLinkImage extends LinkImage {\n  static get pluginName() {\n    return \"CustomLinkImage\";\n  }\n\n  /**\n   * @inheritDoc\n   */\n  static get requires() {\n    return [CustomLinkImageEditing, CustomLinkImageUI];\n  }\n}\n","import { SourceEditing } from \"@ckeditor/ckeditor5-source-editing\";\n\nexport default class CustomSourceEditing extends SourceEditing {\n  _isAllowedToHandleSourceEditingMode() {\n    return true;\n  }\n}\n","import { useModule } from \"@metascore-library/core/services/module-manager\";\n\nexport default class Adapter {\n  constructor(loader) {\n    // The file loader instance to use during the upload.\n    this.loader = loader;\n  }\n\n  // Starts the upload process.\n  // @todo: handle uplaod progress\n  async upload() {\n    const { uploadFiles } = useModule(\"assets_library\");\n\n    const file = await this.loader.file;\n    const assets = await uploadFiles([file]);\n\n    return {\n      default: assets[0].url,\n    };\n  }\n}\n","import { Plugin } from \"@ckeditor/ckeditor5-core\";\nimport Adapter from \"./adapter\";\n\nexport default class UploadAdapter extends Plugin {\n  /**\n   * @inheritdoc\n   */\n  constructor(editor) {\n    super(editor);\n\n    editor.plugins.get(\"FileRepository\").createUploadAdapter = (loader) => {\n      return new Adapter(loader);\n    };\n  }\n}\n","import { Alignment } from \"@ckeditor/ckeditor5-alignment\";\nimport { BlockQuote } from \"@ckeditor/ckeditor5-block-quote\";\nimport { Bold } from \"@ckeditor/ckeditor5-basic-styles\";\nimport { Essentials } from \"@ckeditor/ckeditor5-essentials\";\nimport { Font } from \"@ckeditor/ckeditor5-font\";\nimport { GeneralHtmlSupport } from \"@ckeditor/ckeditor5-html-support\";\nimport { Heading } from \"@ckeditor/ckeditor5-heading\";\nimport { Image } from \"@ckeditor/ckeditor5-image\";\nimport { ImageResize } from \"@ckeditor/ckeditor5-image\";\nimport { ImageStyle } from \"@ckeditor/ckeditor5-image\";\nimport { ImageTextAlternative } from \"@ckeditor/ckeditor5-image\";\nimport { ImageToolbar } from \"@ckeditor/ckeditor5-image\";\nimport { ImageUpload } from \"@ckeditor/ckeditor5-image\";\nimport { Indent } from \"@ckeditor/ckeditor5-indent\";\nimport { IndentBlock } from \"@ckeditor/ckeditor5-indent\";\nimport { Italic } from \"@ckeditor/ckeditor5-basic-styles\";\nimport { Link } from \"@ckeditor/ckeditor5-link\";\nimport { LinkUI } from \"@ckeditor/ckeditor5-link\";\nimport { AutoLink } from \"@ckeditor/ckeditor5-link\";\nimport { LinkEditing } from \"@ckeditor/ckeditor5-link\";\nimport { LinkImage } from \"@ckeditor/ckeditor5-link\";\nimport { LinkImageEditing } from \"@ckeditor/ckeditor5-link\";\nimport { List } from \"@ckeditor/ckeditor5-list\";\nimport { Paragraph } from \"@ckeditor/ckeditor5-paragraph\";\nimport { RemoveFormat } from \"@ckeditor/ckeditor5-remove-format\";\nimport { SourceEditing } from \"@ckeditor/ckeditor5-source-editing\";\nimport { SpecialCharacters } from \"@ckeditor/ckeditor5-special-characters\";\nimport { SpecialCharactersEssentials } from \"@ckeditor/ckeditor5-special-characters\";\nimport { Strikethrough } from \"@ckeditor/ckeditor5-basic-styles\";\nimport { Subscript } from \"@ckeditor/ckeditor5-basic-styles\";\nimport { Superscript } from \"@ckeditor/ckeditor5-basic-styles\";\nimport { Table } from \"@ckeditor/ckeditor5-table\";\nimport { TableToolbar } from \"@ckeditor/ckeditor5-table\";\nimport { Underline } from \"@ckeditor/ckeditor5-basic-styles\";\n\nimport { BehaviorTrigger } from \"./plugins/ckeditor5-behaviortrigger/src\";\nimport { CustomLink, CustomLinkImage } from \"./plugins/ckeditor5-link/src\";\nimport { CustomSourceEditing } from \"./plugins/ckeditor5-sourceediting/src\";\nimport { UploadAdapter } from \"./plugins/ckeditor5-uploadadapter/src\";\n\nimport { DecoupledEditor } from \"@ckeditor/ckeditor5-editor-decoupled\";\n\nimport \"./styles.scss\";\n\nexport default function createEditor(\n  el,\n  { language = \"fr\", extraFonts = [] } = {}\n) {\n  return DecoupledEditor.create(el, {\n    language,\n    removePlugins: [\n      Link,\n      AutoLink,\n      LinkEditing,\n      LinkUI,\n      LinkImage,\n      LinkImageEditing,\n      SourceEditing,\n    ],\n    plugins: [\n      Alignment,\n      BehaviorTrigger,\n      BlockQuote,\n      Bold,\n      Essentials,\n      Font,\n      GeneralHtmlSupport,\n      Heading,\n      Image,\n      ImageResize,\n      ImageStyle,\n      ImageTextAlternative,\n      ImageToolbar,\n      ImageUpload,\n      Indent,\n      IndentBlock,\n      Italic,\n      CustomLink,\n      CustomLinkImage,\n      List,\n      Paragraph,\n      RemoveFormat,\n      CustomSourceEditing,\n      SpecialCharacters,\n      SpecialCharactersEssentials,\n      Strikethrough,\n      Subscript,\n      Superscript,\n      Table,\n      TableToolbar,\n      Underline,\n      UploadAdapter,\n    ],\n    toolbar: {\n      items: [\n        \"undo\",\n        \"redo\",\n        \"|\",\n        \"bold\",\n        \"italic\",\n        \"underline\",\n        \"strikethrough\",\n        \"subscript\",\n        \"superscript\",\n        \"|\",\n        \"heading\",\n        \"blockQuote\",\n        \"removeFormat\",\n        \"|\",\n        \"fontFamily\",\n        \"fontSize\",\n        \"fontColor\",\n        \"fontBackgroundColor\",\n        \"|\",\n        \"numberedList\",\n        \"bulletedList\",\n        \"outdent\",\n        \"indent\",\n        \"|\",\n        \"alignment\",\n        \"|\",\n        \"uploadImage\",\n        \"insertTable\",\n        \"specialCharacters\",\n        \"-\",\n        \"link\",\n        \"addBehaviorTrigger\",\n        \"|\",\n        \"sourceEditing\",\n      ],\n      shouldNotGroupWhenFull: true,\n    },\n    heading: {\n      options: [\n        { model: \"paragraph\", title: \"Paragraph\" },\n        { model: \"heading1\", view: \"h1\", title: \"Heading 1\" },\n        { model: \"heading2\", view: \"h2\", title: \"Heading 2\" },\n        { model: \"heading3\", view: \"h3\", title: \"Heading 3\" },\n        { model: \"heading4\", view: \"h4\", title: \"Heading 4\" },\n        { model: \"heading5\", view: \"h5\", title: \"Heading 5\" },\n        { model: \"heading6\", view: \"h6\", title: \"Heading 6\" },\n        { model: \"div\", view: \"div\", title: \"Division\" },\n        { model: \"pre\", view: \"pre\", title: \"Preformatted\" },\n        { model: \"address\", view: \"address\", title: \"Address\" },\n      ],\n    },\n    fontFamily: {\n      options: [\n        \"default\",\n        ...extraFonts,\n        \"Arial, Helvetica, sans-serif\",\n        \"Courier New, Courier, monospace\",\n        \"Georgia, serif\",\n        \"Lucida Sans Unicode, Lucida Grande, sans-serif\",\n        \"Tahoma, Geneva, sans-serif\",\n        \"Times New Roman, Times, serif\",\n        \"Trebuchet MS, Helvetica, sans-serif\",\n        \"Verdana, Geneva, sans-serif\",\n      ],\n      supportAllValues: true,\n    },\n    fontSize: {\n      options: [\n        \"default\",\n        8,\n        9,\n        10,\n        11,\n        12,\n        14,\n        16,\n        18,\n        20,\n        22,\n        24,\n        26,\n        28,\n        36,\n        48,\n        72,\n      ],\n      supportAllValues: true,\n    },\n    image: {\n      toolbar: [\n        \"linkImage\",\n        \"|\",\n        \"imageStyle:inline\",\n        \"imageStyle:block\",\n        \"imageStyle:side\",\n        \"|\",\n        \"imageTextAlternative\",\n      ],\n    },\n    table: {\n      contentToolbar: [\"tableColumn\", \"tableRow\", \"mergeTableCells\"],\n    },\n    htmlSupport: {\n      allow: [\n        {\n          name: /^(div|a|p|i|em|b|strong|h[1-6]|span|big|small|q|cite|ins|del|var|samp|kbd|code|tt)$/,\n          classes: true,\n          styles: true,\n          attributes: {\n            dir: /^(rtl|ltr)$/,\n          },\n        },\n        {\n          name: \"a\",\n          attributes: {\n            target: \"_blank\",\n            rel: /^(noopener|nofollow)$/,\n          },\n        },\n      ],\n      disallow: [],\n    },\n    updateSourceElementOnDestroy: true,\n  });\n}\n","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" xml:space=\\\"preserve\\\" viewBox=\\\"0 0 22 22\\\">\\n  <path d=\\\"M12.069 13.455c.308.307.338.781.063 1.055l-4.555 4.553c-.271.271-.747.244-1.053-.064l-3.526-3.523c-.306-.309-.334-.781-.063-1.055L7.49 9.867c.272-.272.747-.243 1.053.063.307.306.337.781.064 1.053l-3.564 3.565c-.272.271-.245.746.063 1.053l1.29 1.291c.308.307.782.334 1.055.064l3.563-3.564c.274-.273.748-.246 1.055.063M19 6.526c.307.306.336.78.063 1.053l-4.554 4.554c-.27.271-.747.244-1.054-.063-.307-.308-.336-.782-.065-1.055l3.565-3.563c.273-.272.243-.747-.063-1.053l-1.29-1.291c-.307-.308-.78-.337-1.053-.064l-3.566 3.563c-.271.273-.746.244-1.053-.063-.307-.306-.335-.781-.064-1.052l4.555-4.555c.271-.272.747-.243 1.053.063L19 6.526z\\\"/>\\n  <path d=\\\"M14.217 7.783c.31.308.338.78.063 1.053l-5.446 5.445c-.27.271-.745.242-1.053-.064-.306-.305-.335-.781-.063-1.053l5.446-5.444c.272-.274.747-.245 1.053.063M19.035 19.465 17.48 21.02a.824.824 0 1 1-1.207-1.125l.041-.041 1.555-1.557-1.557-1.555a.824.824 0 0 1 1.166-1.166l1.556 1.555 1.557-1.557a.825.825 0 1 1 1.166 1.168l-1.555 1.555 1.555 1.557a.824.824 0 1 1-1.166 1.166l-1.556-1.555z\\\"/>\\n</svg>\\n\";"],"names":["AutomaticDecorators","_classCallCheck","this","_definitions","Set","_createClass","key","get","size","value","item","_this","Array","isArray","forEach","add","_this2","dispatcher","on","evt","data","conversionApi","consumable","test","is","schema","isInline","_step","viewWriter","writer","viewSelection","document","selection","_iterator","_createForOfIteratorHelper","s","n","done","viewElement","createAttributeElement","attributes","priority","classes","addClass","styles","setStyle","setCustomProperty","callback","attributeNewValue","wrap","getFirstRange","mapper","toViewRange","range","unwrap","err","e","f","TRIGGER_KEYSTROKE","isLinkElement","node","getCustomProperty","createBehaviorTriggerElement","id","_ref","behaviorTriggerElement","isTriggerableElement","element","checkAttribute","name","AddBehaviorTriggerCommand","_Command","editor","_callSuper","manualDecorators","Collection","automaticDecorators","_inherits","manualDecorator","_getDecoratorStateFromModel","model","selectedElement","getSelectedElement","first","getSelectedBlocks","getAttribute","isEnabled","checkAttributeInSelection","_step2","_iterator2","manualDecoratorIds","arguments","length","undefined","truthyManualDecorators","falsyManualDecorators","push","change","isCollapsed","position","getFirstPosition","hasAttribute","linkRange","findAttributeRange","setAttribute","removeAttribute","setSelection","createPositionAfter","end","nodeBefore","toMap","getAttributes","set","_model$insertContent","insertContent","createText","positionAfter","concat","removeSelectionAttribute","_step3","ranges","getValidRanges","getRanges","allowedRanges","_iterator3","createRangeOn","_step4","rangesToUpdate","slice","_iterator4","_isRangeToUpdate","_step5","_iterator5","_loop","decoratorName","_step6","_iterator6","allowedRange","containsRange","Command","RemoveBehaviorTriggerCommand","addBehaviorTriggerCommand","commands","rangesToUnlink","HIGHLIGHT_CLASS","BehaviorTriggerEditing","_Plugin","extend","allowAttributes","conversion","for","attributeToElement","view","elementToAttribute","twoStepCaretMovementPlugin","plugins","TwoStepCaretMovement","registerAttribute","inlineHighlight","_enableInsertContentSelectionAttributesFixer","_enableClickingAfterLink","_enableTypingOverLink","_handleDeleteContentAfterLink","listenTo","anchor","nodeAfter","removeLinkAttributesFromSelection","getLinkAttributesAllowedOnText","editing","addObserver","MouseObserver","clicked","isTouching","start","selectionAttributes","deletedContent","isTyping","shouldCopyAttributes","_ref2","_slicedToArray","_step$value","attribute","shouldPreserveAttributes","hasBackspacePressed","domEvent","keyCode","keyCodes","backspace","behaviorTrigger","containsPosition","isEqual","enqueueChange","Input","ClipboardPipeline","Plugin","linkAttributes","firstPosition","lastPosition","getLastPosition","nodeAtFirstPosition","nodeAtLastPosition","textNode","createRange","currentBatch","batch","textAttributes","getDefinition","filter","startsWith","BehaviorTriggerFormView","_View","locale","t","focusTracker","FocusTracker","keystrokes","KeystrokeHandler","idInputView","_createIdInput","saveButtonView","_createButton","icons","check","type","cancelButtonView","cancel","_manualDecoratorSwitches","_createManualDecoratorSwitches","children","_createFormChildren","_focusables","ViewCollection","_focusCycler","FocusCycler","focusables","keystrokeHandler","actions","focusPrevious","focusNext","classList","setTemplate","tag","class","tabindex","from","reduce","accumulator","switchButton","isOn","_get","_getPrototypeOf","prototype","call","submitHandler","childViews","_toConsumableArray","v","destroy","focusFirst","labeledInput","LabeledFieldView","createLabeledInputText","label","icon","className","eventName","button","ButtonView","tooltip","extendTemplate","delegate","to","_this3","switches","createCollection","SwitchButtonView","withText","bind","toMany","decoratorValue","commandValue","defaultValue","additionalButtonsView","View","map","BehaviorTriggerActionsView","previewLabelView","_createPreviewLabel","removeTriggerButtonView","removeBehaviorTriggerIcon","editButtonView","pencil","LabelView","VISUAL_SELECTION_MARKER_NAME","BehaviorTriggerUI","ClickObserver","actionsView","_createActionsView","formView","_createFormView","_balloon","ContextualBalloon","_createToolbarAddButton","_enableUserBalloonInteractions","markerToHighlight","markerToElement","removeBehaviorTriggerCommand","_addFormView","execute","_hideUI","CssTransitionDisablerMixin","fieldView","getDecoratorSwitchesState","_closeFormView","keyEvtData","_showUI","ui","componentFactory","addBehaviorTriggerIcon","keystroke","isToggleable","_this4","viewDocument","parentLink","_getSelectedLinkElement","_areActionsVisible","isFocused","focus","_isUIVisible","clickOutsideHandler","emitter","activator","_isUIInPanel","contextElements","_areActionsInPanel","_getBalloonPositionData","_isFormInPanel","disableCssTransitions","visibleView","select","enableCssTransitions","_generateIdFromSelection","restoreManualDecoratorStates","_removeFormView","remove","_hideFakeVisualSelection","forceVisible","_addActionsView","showStack","_showFakeVisualSelection","_startUpdatingUI","stopListening","_this5","prevSelectedLink","prevSelectionParent","getSelectionParent","update","selectedLink","selectionParent","updatePosition","getAncestors","reverse","find","hasView","_this6","target","markers","has","markerViewElements","markerNameToElements","newRange","createPositionBefore","domConverter","viewRangeToDom","targetLink","mapViewToDom","isWidget","findLinkElementAncestor","getTrimmed","startLink","endLink","createRangeIn","updateMarker","isAtEnd","startPosition","getLastMatchingPosition","isContent","boundaries","addMarker","usingOperation","affectsData","removeMarker","getItems","viewToPlainText","replace","substring","trim","toLowerCase","ancestor","BehaviorTrigger","CustomLinkCommand","_LinkCommand","params","_useModule","useModule","getLinkActions","action","omit","index","LinkCommand","CustomLinkEditing","_LinkEditing","LinkEditing","CustomAutoLink","_AutoLink","AutoLink","InputTimecodeView","_InputView","min","max","bindTemplate","inputMode","template","isEmpty","InputView","createLabeledInputTimecode","labeledFieldView","viewUid","statusUid","inputView","ariaDescribedById","errorText","getTypeLabels","play","pause","stop","seek","page","toggle","scenario","fullscreen","url","getComponentLabels","getComponentsByType","labels","c","getToggleActionLabels","show","hide","getFullscreenActionLabels","enter","exit","getDropdownDefinitions","itemDefinitions","Object","entries","definition","ViewModel","_value","FormGroupView","options","child","if","role","LabeledTimecodeFieldView","_LabeledFieldView","_ref$in_button","in_button","_ref$out_button","out_button","_ref$clear_button","clear_button","mediaTime","time","seekMediaTo","seekTo","toolbarView","buttons","inButton","inIcon","unref","fire","outButton","outIcon","clearButton","clearIcon","ToolbarView","items","addMany","fieldWrapperChildren","CustomLinkFormView","_LinkFormView","linkCommand","urlInputView","updateValue","placeholder","extraChildViews","typeInputView","_playInputsGroup","_seekInputsGroup","_pageInputsGroup","_blockToggleInputsGroup","_scenarioInputsGroup","_fullscreenInputsGroup","typeLabels","dropdown","createLabeledDropdown","buttonView","source","dropdownDefinitions","addListToDropdown","playExcerptInputView","excerpt","_this4$params","_objectSpread","playStartInputView","playEndInputView","scenarioLabels","playScenarioInputView","playHighlightInputView","highlight","_this4$params2","inputs","seekTimeInputView","blockLabels","fromEntries","values","val","pageBlockInputView","block","pageIndexInputView","createLabeledInputNumber","step","parseInt","_this7","toggleBlockInputView","nameDropdownDefinitions","actionLabels","toggleActionInputView","actionDropdownDefinitions","_this8","scenarioScenarioInputView","idDropdownDefinitions","_this9","fullscreenActionInputView","tipIcon","_createTypeInput","_createPlayInputs","_createSeekInputs","_createPageInputs","_createBlockToggleInputs","_createScenarioInputs","_createFullscreenInputs","_tipView","_createTipView","_params$start","_params$end","_params$scenario","LinkFormView","CustomLinkUI","_LinkUI","defaultProtocol","config","allowCreatingEmptyLinks","isCommandEnabled","isInputEmpty","parsedUrl","addLinkProtocolIfApplicable","linkIcon","LINK_KEYSTROKE","unbind","LinkUI","CustomLink","_Link","Link","CustomLinkImageEditing","_LinkImageEditing","LinkImageEditing","CustomLinkImageUI","_LinkImageUI","LinkImageUI","CustomLinkImage","_LinkImage","LinkImage","CustomSourceEditing","_SourceEditing","SourceEditing","Adapter","loader","_upload","_asyncToGenerator","_regeneratorRuntime","mark","_callee","uploadFiles","file","assets","_context","prev","next","sent","abrupt","default","upload","apply","UploadAdapter","createUploadAdapter","createEditor","el","_ref$language","language","_ref$extraFonts","extraFonts","DecoupledEditor","create","removePlugins","Alignment","BlockQuote","Bold","Essentials","Font","GeneralHtmlSupport","Heading","Image","ImageResize","ImageStyle","ImageTextAlternative","ImageToolbar","ImageUpload","Indent","IndentBlock","Italic","List","Paragraph","RemoveFormat","SpecialCharacters","SpecialCharactersEssentials","Strikethrough","Subscript","Superscript","Table","TableToolbar","Underline","toolbar","shouldNotGroupWhenFull","heading","title","fontFamily","supportAllValues","fontSize","image","table","contentToolbar","htmlSupport","allow","dir","rel","disallow","updateSourceElementOnDestroy"],"sourceRoot":""}